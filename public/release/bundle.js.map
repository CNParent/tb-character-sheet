{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/internal/flags/index.js","../../node_modules/svelte/src/constants.js","../../node_modules/esm-env/dev-fallback.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/svelte/src/internal/client/dev/tracing.js","../../node_modules/svelte/src/internal/client/proxy.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/internal/client/context.js","../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/svelte/src/internal/client/dom/blocks/slot.js","../../node_modules/svelte/src/internal/shared/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/svelte/src/internal/client/dom/elements/style.js","../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../node_modules/svelte/src/index-client.js","../../node_modules/svelte/src/internal/client/reactivity/store.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../src/models/ability.js","../../src/models/abilities.js","../../src/models/nature.js","../../src/models/container.js","../../src/models/skill.js","../../src/models/character.js","../../src/models/advancement.js","../../src/models/bio.js","../../src/models/circles.js","../../src/models/conditions.js","../../src/models/inventory.js","../../src/models/skills.js","../../src/models/spells.js","../../src/components/Bubbles.svelte","../../src/components/Ability.svelte","../../node_modules/svelte/src/internal/server/context.js","../../src/components/TagList.svelte","../../src/components/Nature.svelte","../../src/components/Advancement.svelte","../../src/components/TextArea.svelte","../../src/components/TextInput.svelte","../../src/components/Circle.svelte","../../src/models/follower.js","../../src/components/Followers.svelte","../../src/components/Follower.svelte","../../src/components/Condition.svelte","../../src/components/Container.svelte","../../src/components/Item.svelte","../../src/components/NavLink.svelte","../../node_modules/svelte/src/index-server.js","../../src/models/mods.js","../../src/actions/characterActions.js","../../src/lib/styles.js","../../src/components/Navbar.svelte","../../src/lib/dateUtil.js","../../src/components/Notes.svelte","../../src/components/Note.svelte","../../src/components/Skills.svelte","../../src/components/Skill.svelte","../../src/components/Spells.svelte","../../src/components/Spell.svelte","../../src/components/Traits.svelte","../../src/components/Trait.svelte","../../src/components/Wise.svelte","../../src/main.js","../../src/App.svelte","../../node_modules/svelte/src/internal/client/dom/blocks/svelte-head.js","../../src/components/Conditions.svelte","../../src/components/Abilities.svelte","../../src/components/Bio.svelte","../../src/components/Circles.svelte","../../src/components/Inventory.svelte","../../src/components/Wises.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.28.2';\nexport const PUBLIC_VERSION = '5';\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\nexport const EFFECT_IS_UPDATING = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * Calling `%method%` on a component instance (of %component%) is no longer valid in Svelte 5\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\nCalling \\`${method}\\` on a component instance (of ${component}) is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { Derived, Reaction, Value } from '#client' */\nimport { UNINITIALIZED } from '../../../constants.js';\nimport { snapshot } from '../../shared/clone.js';\nimport { define_property } from '../../shared/utils.js';\nimport { DERIVED, STATE_SYMBOL } from '#client/constants';\nimport { effect_tracking } from '../reactivity/effects.js';\nimport { active_reaction, captured_signals, set_captured_signals, untrack } from '../runtime.js';\n\n/** @type { any } */\nexport let tracing_expressions = null;\n\n/**\n * @param { Value } signal\n * @param { { read: Error[] } } [entry]\n */\nfunction log_entry(signal, entry) {\n\tconst debug = signal.debug;\n\tconst value = signal.trace_need_increase ? signal.trace_v : signal.v;\n\n\tif (value === UNINITIALIZED) {\n\t\treturn;\n\t}\n\n\tif (debug) {\n\t\tvar previous_captured_signals = captured_signals;\n\t\tvar captured = new Set();\n\t\tset_captured_signals(captured);\n\t\ttry {\n\t\t\tuntrack(() => {\n\t\t\t\tdebug();\n\t\t\t});\n\t\t} finally {\n\t\t\tset_captured_signals(previous_captured_signals);\n\t\t}\n\t\tif (captured.size > 0) {\n\t\t\tfor (const dep of captured) {\n\t\t\t\tlog_entry(dep);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst type = (signal.f & DERIVED) !== 0 ? '$derived' : '$state';\n\tconst current_reaction = /** @type {Reaction} */ (active_reaction);\n\tconst dirty = signal.wv > current_reaction.wv || current_reaction.wv === 0;\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupCollapsed(\n\t\t`%c${type}`,\n\t\tdirty ? 'color: CornflowerBlue; font-weight: bold' : 'color: grey; font-weight: bold',\n\t\ttypeof value === 'object' && value !== null && STATE_SYMBOL in value\n\t\t\t? snapshot(value, true)\n\t\t\t: value\n\t);\n\n\tif (type === '$derived') {\n\t\tconst deps = new Set(/** @type {Derived} */ (signal).deps);\n\t\tfor (const dep of deps) {\n\t\t\tlog_entry(dep);\n\t\t}\n\t}\n\n\tif (signal.created) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.created);\n\t}\n\n\tif (signal.updated) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.updated);\n\t}\n\n\tconst read = entry?.read;\n\n\tif (read && read.length > 0) {\n\t\tfor (var stack of read) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(stack);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupEnd();\n}\n\n/**\n * @template T\n * @param {() => string} label\n * @param {() => T} fn\n */\nexport function trace(label, fn) {\n\tvar previously_tracing_expressions = tracing_expressions;\n\ttry {\n\t\ttracing_expressions = { entries: new Map(), reaction: active_reaction };\n\n\t\tvar start = performance.now();\n\t\tvar value = fn();\n\t\tvar time = (performance.now() - start).toFixed(2);\n\n\t\tif (!effect_tracking()) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cran outside of an effect (${time}ms)`, 'color: grey');\n\t\t} else if (tracing_expressions.entries.size === 0) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cno reactive dependencies (${time}ms)`, 'color: grey');\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.group(`${label()} %c(${time}ms)`, 'color: grey');\n\n\t\t\tvar entries = tracing_expressions.entries;\n\n\t\t\ttracing_expressions = null;\n\n\t\t\tfor (const [signal, entry] of entries) {\n\t\t\t\tlog_entry(signal, entry);\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\tif (previously_tracing_expressions !== null && tracing_expressions !== null) {\n\t\t\tfor (const [signal, entry] of tracing_expressions.entries) {\n\t\t\t\tvar prev_entry = previously_tracing_expressions.get(signal);\n\n\t\t\t\tif (prev_entry === undefined) {\n\t\t\t\t\tpreviously_tracing_expressions.set(signal, entry);\n\t\t\t\t} else {\n\t\t\t\t\tprev_entry.read.push(...entry.read);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} finally {\n\t\ttracing_expressions = previously_tracing_expressions;\n\t}\n}\n\n/**\n * @param {string} label\n */\nexport function get_stack(label) {\n\tlet error = Error();\n\tconst stack = error.stack;\n\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = ['\\n'];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tif (line === 'Error') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (line.includes('validate_each_keys')) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\n\t\tif (new_lines.length === 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\n\t\tdefine_property(error, 'name', {\n\t\t\t// 'Error' suffix is required for stack traces to be rendered properly\n\t\t\tvalue: `${label}Error`\n\t\t});\n\t}\n\treturn error;\n}\n","/** @import { Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect, active_reaction, set_active_reaction } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { state as source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL } from '#client/constants';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @returns {T}\n */\nexport function proxy(value) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar reaction = active_reaction;\n\n\t/**\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tvar previous_reaction = active_reaction;\n\t\tset_active_reaction(reaction);\n\n\t\t/** @type {T} */\n\t\tvar result = fn();\n\n\t\tset_active_reaction(previous_reaction);\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => source(descriptor.value, stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(descriptor.value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\twith_parent(() => source(UNINITIALIZED, stack))\n\t\t\t\t\t);\n\t\t\t\t\tupdate_version(version);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => source(proxy(exists ? target[prop] : UNINITIALIZED), stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => source(has ? proxy(target[prop]) : UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t\t);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Equals } from '#client' */\n\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '#client/constants';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '#client/constants';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\tremove_effect_dom(effect.nodes_start, /** @type {TemplateNode} */ (effect.nodes_end));\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n *\n * @param {TemplateNode | null} node\n * @param {TemplateNode} end\n */\nexport function remove_effect_dom(node, end) {\n\twhile (node !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT,\n\tEFFECT_IS_UPDATING\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nlet is_throwing_error = false;\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them should not cause a re-run\n * @type {null | Source[]}\n */\nexport let reaction_sources = null;\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (reaction_sources === null) {\n\t\t\treaction_sources = [value];\n\t\t} else {\n\t\t\treaction_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (DEV && component_context !== null && error instanceof Error && !handled_errors.has(error)) {\n\t\thandled_errors.add(error);\n\n\t\tconst component_stack = [];\n\n\t\tconst effect_name = effect.fn?.name;\n\n\t\tif (effect_name) {\n\t\t\tcomponent_stack.push(effect_name);\n\t\t}\n\n\t\t/** @type {ComponentContext | null} */\n\t\tlet current_context = component_context;\n\n\t\twhile (current_context !== null) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\n\t\t\tcurrent_context = current_context.p;\n\t\t}\n\n\t\tconst indent = is_firefox ? '  ' : '\\t';\n\t\tdefine_property(error, 'message', {\n\t\t\tvalue:\n\t\t\t\terror.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t\t});\n\t\tdefine_property(error, 'component_stack', {\n\t\t\tvalue: component_stack\n\t\t});\n\n\t\tconst stack = error.stack;\n\n\t\t// Filter out internal files from callstack\n\t\tif (stack) {\n\t\t\tconst lines = stack.split('\\n');\n\t\t\tconst new_lines = [];\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tconst line = lines[i];\n\t\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnew_lines.push(line);\n\t\t\t}\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: new_lines.join('\\n')\n\t\t\t});\n\t\t}\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif (reaction_sources?.includes(signal)) continue;\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_reaction_sources = reaction_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\treaction_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null && previous_reaction !== reaction) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\treaction_sources = previous_reaction_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t\told_values.clear();\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tresult = fn();\n\t}\n\n\tflush_tasks();\n\n\twhile (queued_root_effects.length > 0) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tflush_tasks();\n\t}\n\n\treturn /** @type {T} */ (result);\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!reaction_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\treaction_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '#client/constants';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\nimport { execute_derived } from './deriveds.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t!reaction_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value) : value;\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tif ((source.f & DERIVED) !== 0) {\n\t\t\t// if we are assigning to a dirty derived we set it to clean/maybe dirty but we also eagerly execute it to track the dependencies\n\t\t\tif ((source.f & DIRTY) !== 0) {\n\t\t\t\texecute_derived(/** @type {Derived} */ (source));\n\t\t\t}\n\t\t\tset_signal_status(source, (source.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n\t\t}\n\n\t\tsource.wv = increment_write_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","import { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = /** @type {Comment} */ (anchor).data;\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '#client/constants';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","import { hydrate_next, hydrating } from '../hydration.js';\n\n/**\n * @param {Comment} anchor\n * @param {Record<string, any>} $$props\n * @param {string} name\n * @param {Record<string, unknown>} slot_props\n * @param {null | ((anchor: Comment) => void)} fallback_fn\n */\nexport function slot(anchor, $$props, name, slot_props, fallback_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar slot_fn = $$props.$$slots?.[name];\n\t// Interop: Can use snippets to fill slots\n\tvar is_interop = false;\n\tif (slot_fn === true) {\n\t\tslot_fn = $$props[name === 'default' ? 'children' : name];\n\t\tis_interop = true;\n\t}\n\n\tif (slot_fn === undefined) {\n\t\tif (fallback_fn !== null) {\n\t\t\tfallback_fn(anchor);\n\t\t}\n\t} else {\n\t\tslot_fn(anchor, is_interop ? () => slot_props : slot_props);\n\t}\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, boolean>}\n */\nexport function sanitize_slots(props) {\n\t/** @type {Record<string, boolean>} */\n\tconst sanitized = {};\n\tif (props.children) sanitized.default = true;\n\tfor (const key in props.$$slots) {\n\t\tsanitized[key] = true;\n\t}\n\treturn sanitized;\n}\n","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (\n\t\thydrating ||\n\t\tprev !== value ||\n\t\tprev === undefined // for edge case of `class={undefined}`\n\t) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n","import { to_style } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {Record<string, any>} prev\n * @param {Record<string, any>} next\n * @param {string} [priority]\n */\nfunction update_styles(dom, prev = {}, next, priority) {\n\tfor (var key in next) {\n\t\tvar value = next[key];\n\n\t\tif (prev[key] !== value) {\n\t\t\tif (next[key] == null) {\n\t\t\t\tdom.style.removeProperty(key);\n\t\t\t} else {\n\t\t\t\tdom.style.setProperty(key, value, priority);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {string | null} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [prev_styles]\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [next_styles]\n */\nexport function set_style(dom, value, prev_styles, next_styles) {\n\t// @ts-expect-error\n\tvar prev = dom.__style;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_style_attr = to_style(value, next_styles);\n\n\t\tif (!hydrating || next_style_attr !== dom.getAttribute('style')) {\n\t\t\tif (next_style_attr == null) {\n\t\t\t\tdom.removeAttribute('style');\n\t\t\t} else {\n\t\t\t\tdom.style.cssText = next_style_attr;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tdom.__style = value;\n\t} else if (next_styles) {\n\t\tif (Array.isArray(next_styles)) {\n\t\t\tupdate_styles(dom, prev_styles?.[0], next_styles[0]);\n\t\t\tupdate_styles(dom, prev_styles?.[1], next_styles[1], 'important');\n\t\t} else {\n\t\t\tupdate_styles(dom, prev_styles, next_styles);\n\t\t}\n\t}\n\n\treturn next_styles;\n}\n","import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '#client/constants';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { NAMESPACE_HTML } from '../../../../constants.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { untrack } from '../../../runtime.js';\nimport { is_runes } from '../../../context.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\thydrating &&\n\t\tinput.files\n\t) {\n\t\tset(input.files);\n\t}\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","import { STATE_SYMBOL } from '#client/constants';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: null; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '#client/constants';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n","const ability = ({ name, cap }) => {\r\n    return {\r\n        name,\r\n        cap,\r\n        rating: 0,\r\n        pass: 0,\r\n        fail: 0\r\n    }\r\n}\r\n\r\nexport default ability","import ability from './ability.js'\r\nimport nature from './nature.js'\r\n\r\nconst abilities = () => {\r\n    return {\r\n        health: ability({ name: 'Health', cap: 7 }),\r\n        will: ability({ name: 'Will', cap: 7 }),\r\n        nature: nature(),\r\n        resources: ability({ name: 'Resources', cap: 10 }),\r\n        circles: ability({ name: 'Circles', cap: 10 }),\r\n        lifestyle: 0,\r\n        might: 3,\r\n        precedence: 0\r\n    }\r\n}\r\n\r\nexport default abilities","const nature = () => {\r\n    return {\r\n        current: 3,\r\n        maximum: 3,\r\n        pass: 0,\r\n        fail: 0,\r\n        descriptors: []\r\n    }\r\n}\r\n\r\nexport default nature","const container = ({ name, size, format }) => {\r\n    return {\r\n        id: crypto.randomUUID(),\r\n        name,\r\n        size,\r\n        format,\r\n        items: []\r\n    }\r\n};\r\n\r\nexport default container","const skill = ({ name = '', bluck = 'Health', readonly = true, special = false }) => {\r\n    return {\r\n        id: crypto.randomUUID(),\r\n        name,\r\n        bluck,\r\n        readonly,\r\n        special,\r\n        cap: 7,\r\n        rating: 0,\r\n        pass: 0,\r\n        fail: 0\r\n    };\r\n}\r\n\r\nexport default skill","import abilities from \"./abilities.js\"\r\nimport advancement from \"./advancement.js\"\r\nimport bio from \"./bio.js\"\r\nimport circles from \"./circles.js\"\r\nimport conditions from \"./conditions.js\"\r\nimport inventory from \"./inventory.js\"\r\nimport skills from \"./skills.js\"\r\nimport spells from \"./spells.js\"\r\n\r\nconst character = () => {\r\n    return {\r\n        navbar: { tab: 'bio' },\r\n        abilities: abilities(),\r\n        advancement: advancement(),\r\n        bio: bio(),\r\n        circles: circles(),\r\n        conditions: conditions(),\r\n        inventory: inventory(),\r\n        mod: 'torchbearer',\r\n        notes: [],\r\n        skills: skills(),\r\n        spells: spells(),\r\n        traits: [],\r\n        wises: []\r\n    };\r\n}\r\n\r\nexport default character","const advancement = () => {\r\n    return {\r\n        currentFate: 0,\r\n        currentPersona: 0,\r\n        spentFate: 0,\r\n        spentPersona: 0,\r\n        levelBenefits: []\r\n    };\r\n}\r\n\r\nexport default advancement","const bio = () => {\r\n    return {\r\n        name: '',\r\n        parents: '',\r\n        mentor: '',\r\n        age: '',\r\n        home: '',\r\n        level: '',\r\n        raiment: '',\r\n        stock: '',\r\n        classValue: '',\r\n        belief: '',\r\n        creed: '',\r\n        goal: '',\r\n        instinct: '',\r\n        epithet: ''\r\n    }\r\n}\r\n\r\nexport default bio","const circles = () => {\r\n    return {\r\n        friends: [],\r\n        enemies: []\r\n    };\r\n}\r\n\r\nexport default circles","const conditions = () => {\r\n    return {\r\n        shown: true,\r\n        fresh: false,\r\n        hungry: false,\r\n        angry: false,\r\n        afraid: false,\r\n        exhausted: false,\r\n        injured: false,\r\n        sick: false,\r\n        dead: false\r\n    }\r\n}\r\n\r\nexport default conditions","import container from \"./container\"\r\n\r\nconst inventory = () => [\r\n    container({ name: 'Head', size: 1, format: 'static' }),\r\n    container({ name: 'Neck', size: 1, format: 'static' }),\r\n    container({ name: 'Hands (worn)', size: 2, format: 'static' }),\r\n    container({ name: 'Hands (carried)', size: 2, format: 'static' }),\r\n    container({ name: 'Feet', size: 1, format: 'static' }),\r\n    container({ name: 'Torso', size: 3, format: 'static' }),\r\n    container({ name: 'Belt', size: 3, format: 'static' }),\r\n    container({ name: 'Pockets', size: 1, format: 'pockets' }),\r\n    container({ name: 'Backpack', size: 6, format: 'pack' }),\r\n    container({ name: 'Ground', size: 1, format: 'pockets' }),\r\n    container({ name: 'Stash', size: 12, format: 'stash' })\r\n];\r\n\r\nexport default inventory","import skill from './skill.js'\r\n\r\nconst skills = () => {\r\n    return {\r\n        show: 'all',\r\n        lockSpecialty: false,\r\n        skills: [\r\n            skill({ name: 'Alchemist', bluck: 'Will' }),\r\n            skill({ name: 'Arcanist', bluck: 'Will' }),\r\n            skill({ name: 'Armorer', bluck: 'Health' }),\r\n            skill({ name: 'Cartographer', bluck: 'Will', special: true }),\r\n            skill({ name: 'Commander', bluck: 'Will' }),\r\n            skill({ name: 'Cook', bluck: 'Will', special: true }),\r\n            skill({ name: 'Criminal', bluck: 'Health', special: true }),\r\n            skill({ name: 'Dungeoneer', bluck: 'Health', special: true }),\r\n            skill({ name: 'Fighter', bluck: 'Health' }),\r\n            skill({ name: 'Haggler', bluck: 'Will', special: true }),\r\n            skill({ name: 'Healer', bluck: 'Will', special: true }),\r\n            skill({ name: 'Hunter', bluck: 'Health', special: true }),\r\n            skill({ name: 'Lore Master', bluck: 'Will' }),\r\n            skill({ name: 'Manipulator', bluck: 'Will', special: true }),\r\n            skill({ name: 'Mentor', bluck: 'Will' }),\r\n            skill({ name: 'Orator', bluck: 'Will', special: true }),\r\n            skill({ name: 'Pathfinder', bluck: 'Health', special: true }),\r\n            skill({ name: 'Persuader', bluck: 'Will', special: true }),\r\n            skill({ name: 'Rider', bluck: 'Health', special: true }),\r\n            skill({ name: 'Ritualist', bluck: 'Will' }),\r\n            skill({ name: 'Sapper', bluck: 'Health', special: true }),\r\n            skill({ name: 'Scavenger', bluck: 'Health', special: true }),\r\n            skill({ name: 'Scholar', bluck: 'Will' }),\r\n            skill({ name: 'Scout', bluck: 'Will', special: true }),\r\n            skill({ name: 'Survivalist', bluck: 'Health', special: true }),\r\n            skill({ name: 'Theologian', bluck: 'Will' })\r\n        ]\r\n    };\r\n}\r\n\r\nexport default skills","const spells = () => {\r\n    return {\r\n        burden: 0,\r\n        urdr: 0,\r\n        memory: 0,\r\n        spells: []\r\n    } \r\n}\r\n\r\nexport default spells","<script>\r\n    export let count = 6;\r\n    export let value = 0;\r\n\r\n    $:arr = [...new Array(count)]\r\n\r\n    function handleClick(i) {\r\n        value = value == i + 1 ? i : i + 1;\r\n    }\r\n</script>\r\n\r\n<div class=\"d-flex w-100\">\r\n    <small class=\"align-self-center\" style=\"width: 3em;\"><slot></slot></small>\r\n    <div>\r\n        {#each arr as x,i}\r\n        <button on:click={() => handleClick(i)} class=\"bubble btn border border-dark\" class:btn-dark={value > i} class:btn-light={value <= i}></button>\r\n        {/each}\r\n    </div>\r\n</div>","<script>\r\n    import Bubbles from './Bubbles.svelte'\r\n\r\n    export let ability;\r\n\r\n    $: maxFail = ability.rating < 2 ? 0 : ability.rating - 1;\r\n    $: maxPass = ability.rating < 1 ? 1 : ability.rating;\r\n\r\n    function handleClick(e) {\r\n        ability.rating += e.shiftKey ? -1 : 1;\r\n        if (ability.rating < 0) ability.rating = ability.cap;\r\n        if (ability.rating > ability.cap) ability.rating = 0;\r\n    }\r\n</script>\r\n\r\n<div class=\"card text-nowrap\">\r\n    <div class=\"card-body\">\r\n        <div class=\"d-flex\">\r\n            <h2 class=\"mr-auto\">{ability.name}</h2>\r\n            <h2><button on:click={handleClick} class=\"badge btn btn-dark\">{ability.rating}</button></h2>\r\n        </div>\r\n        {#if ability.rating < ability.cap}\r\n            <Bubbles count={maxPass} bind:value={ability.pass}>Pass</Bubbles>\r\n        {/if}\r\n        {#if maxFail > 0 && ability.rating < ability.cap}\r\n            <Bubbles count={maxFail} bind:value={ability.fail}>Fail</Bubbles>\r\n        {/if}\r\n    </div>\r\n</div>","/** @import { Component } from '#server' */\nimport { DEV } from 'esm-env';\nimport { on_destroy } from './index.js';\nimport * as e from '../shared/errors.js';\n\n/** @type {Component | null} */\nexport var current_component = null;\n\n/**\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\treturn result;\n}\n\n/**\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_or_init_context_map('setContext').set(key, context);\n\treturn context;\n}\n\n/**\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_or_init_context_map('hasContext').has(key);\n}\n\n/** @returns {Map<any, any>} */\nexport function getAllContexts() {\n\treturn get_or_init_context_map('getAllContexts');\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component === null) {\n\t\te.lifecycle_outside_component(name);\n\t}\n\n\treturn (current_component.c ??= new Map(get_parent_context(current_component) || undefined));\n}\n\n/**\n * @param {Function} [fn]\n */\nexport function push(fn) {\n\tcurrent_component = { p: current_component, c: null, d: null };\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component.function = fn;\n\t}\n}\n\nexport function pop() {\n\tvar component = /** @type {Component} */ (current_component);\n\n\tvar ondestroy = component.d;\n\n\tif (ondestroy) {\n\t\ton_destroy.push(...ondestroy);\n\t}\n\n\tcurrent_component = component.p;\n}\n\n/**\n * @param {Component} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\n\treturn null;\n}\n","<script>\r\n    import { afterUpdate } from 'svelte'\r\n\r\n    export let items = [];\r\n\r\n    let editing = false;\r\n    let editIndex = -1;\r\n    let input;\r\n\r\n    function add() {\r\n        items.push('');\r\n        editIndex = items.length - 1;\r\n        editing = true;\r\n        items = items;\r\n    }\r\n\r\n    function end() {\r\n        if (!items[editIndex])\r\n            items.splice(editIndex, 1);\r\n        \r\n        editing = false;\r\n        editIndex = -1;\r\n        items = items;\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if(input) input.focus(); \r\n    });\r\n</script>\r\n\r\n<div>\r\n    <div class=\"d-flex flex-wrap\">\r\n        {#each items as item, i}\r\n            {#if i == editIndex}\r\n            <span class=\"btn badge badge-light border border-dark p-2 my-1 mr-1\">{item}</span>\r\n            {:else}\r\n            <button on:click={() => { editing = true; editIndex = i; }} class=\"btn badge badge-dark p-2 my-1 mr-1\">{item}</button>\r\n            {/if}\r\n        {/each}\r\n        {#if !editing}\r\n        <button on:click={add} class=\"btn badge badge-light border border-dark p-2 ml-0 mt-1 mb-1\">add</button>\r\n        {/if}\r\n    </div>\r\n    {#if editing}\r\n    <input class=\"form-control\" bind:this={input} bind:value={items[editIndex]} on:blur={end} />\r\n    {/if}\r\n</div>","<script>\r\n    import Bubbles from './Bubbles.svelte'\r\n    import TagList from './TagList.svelte'\r\n\r\n    export let nature;\r\n\r\n    const maxNature = 7;\r\n\r\n    $: maxFail = nature.maximum < 2 ? 0 : nature.maximum - 1;\r\n    $: maxPass = nature.maximum < 1 ? 1 : nature.maximum;\r\n\r\n    function currentClick(e) {\r\n        nature.current += e.shiftKey ? -1 : 1;\r\n        if (nature.current > nature.maximum) nature.current = 0;\r\n        else if (nature.current < 0) nature.current = nature.maximum;\r\n    }\r\n\r\n    function maxClick(e) {\r\n        nature.maximum += e.shiftKey ? -1 : 1;\r\n        if (nature.maximum > maxNature) nature.maximum = 0;\r\n        else if (nature.maximum < 0) nature.maximum = maxNature;\r\n\r\n        if (nature.current > nature.maximum) nature.current = nature.maximum;\r\n    }\r\n</script>\r\n\r\n<div id=\"${this.id}\" class=\"card text-nowrap\">\r\n    <div class=\"card-body\">\r\n        <div class=\"d-flex\">\r\n            <h2 class=\"mr-auto\">Nature</h2>\r\n            <h2><button on:click={currentClick} class=\"btn badge btn-dark\">{nature.current}</button></h2>\r\n            <h2><span class=\"m-1\">/</span></h2>\r\n            <h2><button on:click={maxClick} class=\"btn badge btn-dark\">{nature.maximum}</button></h2>\r\n        </div>\r\n        {#if nature.maximum < maxNature}\r\n        <div class=\"d-flex\">\r\n            <Bubbles count={maxPass} bind:value={nature.pass}>pass</Bubbles>\r\n        </div>\r\n        {/if}\r\n        {#if maxFail > 0 && nature.maximum < maxNature}\r\n        <div class=\"d-flex\">\r\n            <Bubbles count={maxFail} bind:value={nature.fail}>fail</Bubbles>\r\n        </div>\r\n        {/if}\r\n        <div class=\"mt-2\">\r\n            <TagList bind:items={nature.descriptors} />\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import TagList from './TagList.svelte'\r\n\r\n    export let model;\r\n\r\n    let showHelp = false;\r\n\r\n    const levels = [\r\n        { level: 1, fate: 0, persona: 0 },\r\n        { level: 2, fate: 3, persona: 3 },\r\n        { level: 3, fate: 7, persona: 6 },\r\n        { level: 4, fate: 14, persona: 12 },\r\n        { level: 5, fate: 22, persona: 20 },\r\n        { level: 6, fate: 31, persona: 30 },\r\n        { level: 7, fate: 41, persona: 42 },\r\n        { level: 8, fate: 52, persona: 56 },\r\n        { level: 9, fate: 64, persona: 72 },\r\n        { level: 10, fate: 78, persona: 98 }\r\n    ];\r\n\r\n    function change(property, val) {\r\n        model.advancement[property] += val;\r\n        if (model.advancement[property] < 0) model.advancement[property] = 0;\r\n    }\r\n\r\n    function spend(artha) {\r\n        if (model.advancement[`current${artha}`] == 0) return;\r\n\r\n        model.advancement[`current${artha}`]--;\r\n        model.advancement[`spent${artha}`]++;\r\n    }\r\n\r\n    function unspend(artha) {\r\n        if (model.advancement[`spent${artha}`] == 0) return;\r\n\r\n        model.advancement[`current${artha}`]++;\r\n        model.advancement[`spent${artha}`]--;\r\n    }\r\n</script>\r\n\r\n<div class=\"container-fluid text-nowrap\">\r\n    <div class=\"row\">\r\n        {#each ['Fate', 'Persona'] as artha}\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h2 class=\"card-subtitle mb-1\">{artha}</h2>\r\n                    <div class=\"d-flex\">\r\n                        <div class=\"btn-group align-self-center mr-1\">\r\n                            <button on:click={() => change(`current${artha}`, 1)} class=\"btn btn-dark\" >{model.advancement[`current${artha}`]}</button>\r\n                            <button on:click={() => change(`current${artha}`, -1)} class=\"btn btn-light border border-dark\">&darr;</button>\r\n                        </div>\r\n                        <div class=\"btn-group align-self-center\">\r\n                            <button on:click={() => spend(artha)} class=\"btn btn-dark\">{model.advancement[`spent${artha}`]} spent</button>\r\n                            <button on:click={() => unspend(artha)} class=\"btn btn-light border border-dark\">&larr;</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/each}\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                {#if !showHelp}\r\n                <div class=\"card-body\">\r\n                    <h2 class=\"mr-auto\">Level Benefits</h2>\r\n                    <TagList items={model.advancement.levelBenefits} />\r\n                    <button on:click={() => showHelp = true} class=\"position-topright btn badge btn-light border border-dark\">?</button>\r\n                </div>\r\n                {:else}\r\n                <div class=\"card-header\">\r\n                    <h5 id=\"levelRequirementsTitle\">Level Requirements</h5>\r\n                    <button on:click={() => showHelp = false} type=\"button\" class=\"position-topright close\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&cross;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Level</th>\r\n                                <th>Fate</th>\r\n                                <th>Persona</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {#each levels as level}\r\n                            <tr>\r\n                                <td>{level.level}</td>\r\n                                <td>{level.fate}</td>\r\n                                <td>{level.persona}</td>\r\n                            </tr>\r\n                            {/each}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import { afterUpdate } from 'svelte';\r\n\r\n    export let content = '';\r\n    export let highlight = '';\r\n\r\n    let active = false;\r\n    let control;\r\n    $:regexp = new RegExp(highlight, 'gi');\r\n    $:matches = [...content.matchAll(regexp)];\r\n    $:firstFragment = matches.length == 0 ? '' : content.substring(0, matches[0].index);\r\n    $:lastFragment = matches.length == 0 ? '' : content.substring(matches[matches.length - 1].index + matches[matches.length - 1][0].length);\r\n\r\n    function resizeInput() {\r\n        if (control) \r\n            control.style.height = `${control.scrollHeight + 2}px`;\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if (active) control.focus();\r\n    });\r\n</script>\r\n\r\n{#if active}\r\n<span class=\"py-2 border-bottom font-weight-bold\"><slot></slot></span>\r\n<textarea \r\n    bind:this={control} \r\n    bind:value={content}\r\n    on:blur={() => active = false}\r\n    on:focus={resizeInput}\r\n    on:keyup={resizeInput}\r\n    class=\"flex-grow-1 form-control\"></textarea>\r\n{:else}\r\n<span class=\"py-2 border-bottom font-weight-bold\"><slot></slot></span>\r\n<button class=\"btn btn-light text-left align-top wrap w-100\" style=\"min-height: 2.5em;\" on:click={() => active = true}>\r\n    {#if matches.length == 0}\r\n        {content}\r\n    {:else}\r\n        {#each matches as match, i}\r\n            {#if i == 0}{firstFragment}{/if}<span class=\"bg-info\">{match[0]}</span>{#if i < matches.length - 1}{content.substring(match.index + match[0].length, matches[i + 1].index)}{:else}{lastFragment}{/if}\r\n        {/each}\r\n    {/if}\r\n</button>\r\n{/if}","<script>\r\n    import { afterUpdate } from 'svelte';\r\n\r\n    export let content = '';\r\n\r\n    let active = false;\r\n    let control;\r\n\r\n    afterUpdate(() => {\r\n        if (active) control.focus();\r\n    });\r\n</script>\r\n\r\n{#if active}\r\n<div class=\"d-flex mb-1 border-bottom col-lg-3 col-md-4\">\r\n    <span class=\"align-self-center text-right mr-1 py-2 font-weight-bold\" style=\"width: 4.5em; height: 2.5em;\"><slot></slot></span>\r\n    <input bind:this={control} class=\"flex-grow-1 form-control\" bind:value={content} on:blur={() => active = false}>\r\n</div>\r\n{:else}\r\n<div class=\"d-flex mb-1 border-bottom col-lg-3 col-md-4\">\r\n    <span class=\"align-self-center text-right border-right pr-1 py-2 font-weight-bold\" style=\"width: 4.5em;\"><slot></slot></span>\r\n    <button class=\"flex-grow-1 btn btn-light text-left\" on:click={() => active = true}>{content}</button>\r\n</div>\r\n{/if}","<script>\r\n    import { afterUpdate } from 'svelte'\r\n\r\n    export let items = [];\r\n\r\n    let input;\r\n    let editIndex = -1;\r\n\r\n    function add() {\r\n        items.push('');\r\n        items = items;\r\n        editIndex = items.length - 1;\r\n    }\r\n\r\n    function endEdit() {\r\n        if (!items[editIndex])\r\n            items.splice(editIndex, 1);\r\n\r\n        editIndex = -1;\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    })\r\n</script>\r\n\r\n<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"d-flex flex-column\">\r\n            <h2><slot></slot></h2>\r\n            {#each items as item, i}\r\n            {#if editIndex == i}\r\n            <input on:blur={endEdit} class=\"form-control my-1\" bind:value={item} bind:this={input}>\r\n            {:else}\r\n            <button on:click={() => editIndex = i} class=\"btn btn-light border-bottom text-left\">{item}</button>\r\n            {/if}\r\n            {/each}\r\n        </div>\r\n        <div class=\"btn-group\">\r\n            <button on:click={add} class=\"btn btn-light border my-1\">Add</button>\r\n            <button on:click={() => { items.sort(); items = items; }} class=\"btn btn-light border my-1\">a &rarr; z</button>\r\n        </div>\r\n    </div>\r\n</div>","const follower = () => {\r\n    return {\r\n        id: crypto.randomUUID(),\r\n        name: 'New follower',\r\n        conditions: 0,\r\n        description: '',\r\n        tags: []\r\n    }\r\n}\r\n\r\nexport default follower;","<script>\r\n    import Follower from './Follower.svelte'\r\n    import createFollower from '../models/follower.js'\r\n\r\n    export let followers = [];\r\n    \r\n    if (!followers) followers = [];\r\n\r\n    const actions = {\r\n        delete: (follower) => {\r\n            if (!confirm(`Delete ${follower.name}?`)) return;\r\n\r\n            let index = followers.indexOf(follower);\r\n            followers.splice(index, 1);\r\n            followers = followers;\r\n        },\r\n        move: (follower, n) => {\r\n            let index = followers.indexOf(follower);\r\n            followers.splice(index, 1);\r\n\r\n            index += n;\r\n            if (index < 0) index = followers.length;\r\n            else if (index > followers.length) index = 0;\r\n\r\n            followers.splice(index, 0, follower);\r\n            followers = followers;\r\n        }\r\n    }\r\n\r\n    function add() {\r\n        followers.push(createFollower());\r\n        followers = followers;\r\n    }\r\n</script>\r\n\r\n<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <h2>Followers</h2>\r\n        <div class=\"d-flex mb-1\">\r\n            <button on:click={add} class=\"btn btn-light border mb-1 mr-1\">Add follower</button>\r\n        </div>\r\n        {#each followers as follower (follower.id)}\r\n        <Follower follower={follower} actions={actions} />\r\n        {/each}\r\n    </div>\r\n</div>\r\n","<script>\r\n    import { afterUpdate } from 'svelte'\r\n    import TagList from './TagList.svelte'\r\n    import TextArea from './TextArea.svelte'\r\n\r\n    export let follower;\r\n    export let actions;\r\n\r\n    const max = 6;\r\n\r\n    let collapse = true;\r\n    let editName = false;\r\n    let input;\r\n    \r\n    function handleClick(e) {\r\n        follower.conditions += e.shiftKey ? -1 : 1;\r\n        if (follower.conditions < 0) follower.conditions = max;\r\n        if (follower.conditions > max) follower.conditions = 0;\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    });\r\n</script>\r\n\r\n<div class=\"mb-2\">\r\n    <div class=\"d-flex\">\r\n        <button on:click={handleClick} class=\"btn btn-dark\" title=\"Number of conditions\">{follower.conditions}</button>\r\n        {#if editName}\r\n        <input class=\"form-control\" on:blur={() => editName = false} bind:this={input} bind:value={follower.name}>\r\n        {:else}\r\n        <button on:click={() => editName = true} class=\"btn btn-light w-100 text-left font-weight-bold\" style=\"min-height: 2.2em;\">{follower.name}</button>\r\n        {/if}\r\n        {#if !collapse}\r\n        <button on:click={() => collapse = true} class=\"badge btn btn-light border ml-1 p-2\">hide</button>\r\n        {:else}\r\n        <button on:click={() => collapse = false} class=\"badge btn btn-light border ml-1 p-2\">show</button>\r\n        {/if}\r\n        <div class=\"btn-group\">\r\n            <button on:click={() =>actions.move(follower, -1)} class=\"badge btn btn-light border ml-1 p-2\">&uarr;</button>\r\n            <button on:click={() =>actions.move(follower, 1)} class=\"badge btn btn-light border p-2\">&darr;</button>\r\n        </div>\r\n    </div>\r\n    {#if !collapse}\r\n    <div class='card'>\r\n        <div class='card-body p-2'>\r\n            <div class=\"mb-1\">\r\n                <TagList items={follower.tags} />\r\n            </div>\r\n            <TextArea bind:content={follower.description} />\r\n            <div class=\"mt-1\">\r\n                <button class=\"btn btn-dark\" on:click={() => actions.delete(follower)}>Delete</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    {/if}\r\n</div>\r\n","<script>\r\n    export let selected = false;\r\n</script>\r\n\r\n<button class:btn-dark={selected} class:btn-light={!selected} class=\"border border-dark btn m-1\" on:click={() => selected = !selected}><slot></slot></button>","<script>\r\n    import { afterUpdate } from 'svelte'\r\n    import Item from './Item.svelte'\r\n\r\n    export let container;\r\n    export let dragItem;\r\n    export let actions;\r\n    export let selected;\r\n\r\n    const smallButton = 'badge btn btn-light border border-dark align-self-center p-2';\r\n    const canAdd = ['custom', 'pockets'].includes(container.format);\r\n\r\n    const itemActions = {\r\n        delete: (item) => {\r\n            let i = container.items.indexOf(item);\r\n            container.items.splice(i, 1);\r\n            container.items = container.items;\r\n        },\r\n        dragEnd: () => {\r\n            actions.dragEnd();\r\n        },\r\n        dragStart: (item) => {\r\n            actions.dragStart(container, item);\r\n        },\r\n        move: (item, n) => {\r\n            let index = container.items.indexOf(item);\r\n            container.items.splice(index, 1);\r\n\r\n            index += n;\r\n            if (index < 0) index = container.items.length;\r\n            else if (index > container.items.length) index = 0;\r\n\r\n            container.items.splice(index, 0, item);\r\n            container.items = container.items;\r\n        },\r\n        resize: (item, n) => {\r\n            item.size += n;\r\n            if (space - n < 0) item.size -= n;\r\n            if (item.size == 0) item.size = 1;\r\n            container.items = container.items;\r\n        },\r\n        select: (item) => {\r\n            actions.select(container, item);\r\n        }\r\n    };\r\n    \r\n    let editName = false;\r\n    let input;\r\n    $: occupied = container.items.reduce((a,b) => a + b.size, 0);\r\n    $: space = canAdd ? 1 : container.size - occupied;\r\n\r\n    let requiredSpace;\r\n    $: {\r\n        if (canAdd) requiredSpace = 1;\r\n        else if (dragItem != null) requiredSpace = dragItem.size;\r\n        else if (selected != null) requiredSpace = selected.size;\r\n        else requiredSpace = 1;\r\n    }\r\n\r\n    $: canTransfer = (dragItem != null || selected != null) && space >= requiredSpace\r\n    $: disabled = space < requiredSpace;\r\n\r\n    function add() {\r\n        if (space == 0) return;\r\n        if (canTransfer) {\r\n            actions.selectEnd(container);\r\n        } else if (selected == null) {\r\n            container.items.push({ text: '', size: 1, id: crypto.randomUUID() });\r\n            container.items = container.items;\r\n        }\r\n    }\r\n\r\n    function dragEnter(e) {\r\n        if (canTransfer) e.target.classList.add('dragover')\r\n    }\r\n\r\n    function dragLeave(e) {\r\n        e.target.classList.remove('dragover')\r\n    }\r\n\r\n    function dragOver(e) {\r\n        if (canTransfer) e.preventDefault();\r\n    }\r\n\r\n    function drop(e) {\r\n        e.target.classList.remove('dragover');\r\n        actions.dragEnd(container);\r\n    }\r\n\r\n    function sort() {\r\n        container.items.sort((a,b) => a.text.localeCompare(b.text));\r\n        container.items = container.items;\r\n    }\r\n\r\n    function togglePack() {\r\n        if (container.size == 6 && occupied <= 3) {\r\n            container.size = 3;\r\n            container.name = 'Satchel';\r\n        } else {\r\n            container.size = 6;\r\n            container.name = 'Backpack';\r\n        }\r\n    }\r\n\r\n    container.items.forEach(x => {\r\n        if(!x.id) x.id = crypto.randomUUID();\r\n    });\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    });\r\n</script>\r\n\r\n<div class=\"col-lg-3 col-md-4 col-sm-6 my-1\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header p-2 d-flex\">\r\n            {#if container.format == 'pack'}\r\n            <h4 class=\"flex-grow-1 m-0\">\r\n                <button on:click={togglePack} class=\"badge btn btn-light text-left card-title w-100 mb-0\">{container.name}</button>\r\n            </h4>\r\n            {:else if container.format == 'custom' && editName}\r\n            <input on:blur={() => editName = false} bind:this={input} class=\"form-control mr-2\" bind:value={container.name}>\r\n            {:else if container.format == 'custom'}\r\n            <h4 class=\"flex-grow-1 m-0\">\r\n                <button on:click={() => editName = true} class=\"badge btn btn-light text-left card-title w-100 mb-0\">{container.name}</button>\r\n            </h4>\r\n            {:else}\r\n            <h5 class=\"m-0\">\r\n                <span class=\"card-title mb-0\">{container.name}</span>\r\n            </h5>\r\n            {/if}\r\n            {#if canAdd}\r\n            <h5 class=\"ml-auto mr-1\">\r\n                <span class=\"badge btn btn-light\">{occupied}</span>\r\n            </h5>\r\n            {:else}\r\n            <h5 class=\"ml-auto mr-1\">\r\n                <span class=\"badge btn btn-light\">{occupied} / {container.size}</span>\r\n            </h5>\r\n            {/if}\r\n            <div class=\"ml-1 btn-group\">\r\n                <button on:click={() => actions.hide(container)} class=\"{smallButton}\">hide</button>\r\n                <button on:click={sort} class=\"{smallButton}\">a &rarr; z</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"d-flex flex-column\">\r\n                {#each container.items as item (item.id)}\r\n                <Item item={item} actions={itemActions} selected={selected == item} />\r\n                {/each}\r\n                {#if space > 0}\r\n                <button \r\n                    on:dragenter={dragEnter}\r\n                    on:dragleave={dragLeave}\r\n                    on:dragover={dragOver}\r\n                    on:drop={drop}\r\n                    on:click={add} disabled={disabled} \r\n                    class=\"drop btn border mb-1 {disabled ? 'disabled btn-secondary' : 'btn-light'}\"\r\n                    style=\"height: {2.5 * space}em;\">\r\n                </button>\r\n                {/if}\r\n            </div>\r\n            {#if container.format == 'custom'}\r\n            <div class=\"d-flex\">\r\n                <button on:click={() => actions.delete(container)} class=\"btn btn-light border ml-auto\">Delete</button>\r\n            </div>\r\n            {/if}\r\n        </div>\r\n    </div>\r\n</div>\r\n","<script>\r\n    import Bubbles from './Bubbles.svelte'\r\n\r\n    export let item;\r\n    export let actions;\r\n    export let selected = false;\r\n\r\n    const btnStyle = 'btn border border-dark align-self-start';\r\n\r\n    let editing = false;\r\n\r\n    $: size = item.stackSize ? item.size + 1 : item.size;\r\n\r\n    function select() {\r\n        actions.select(item);\r\n    }\r\n\r\n    function stackSize(n) {\r\n        item.stackSize += n;\r\n        if (item.stackSize < 0) item.stackSize = 0;\r\n    }\r\n\r\n    if (item.stackSize === undefined) {\r\n        item.stackSize = 0;\r\n        item.stack = 0;\r\n    }\r\n</script>\r\n\r\n<div>\r\n    {#if editing}\r\n    <div class=\"btn bg-light mb-1 p-0 w-100 border\">\r\n        <div class=\"d-flex m-1\">\r\n            <input class=\"form-control flex-grow-1\" style=\"min-width: 0px;\" bind:value={item.text}>\r\n            <button on:click={() => editing = false} class=\"{btnStyle} btn-light ml-1\">Done</button>\r\n        </div>\r\n        <div class=\"d-flex m-1 align-items-center\">\r\n            <span class=\"{btnStyle} btn-dark\">{item.size}</span>\r\n            <span class=\"ml-1\">Size</span>\r\n            <div class=\"btn-group ml-auto\">\r\n                <button on:click={() => actions.resize(item, 1)} class=\"{btnStyle}\">&uarr;</button>\r\n                <button on:click={() => actions.resize(item, -1)} class=\"{btnStyle}\">&darr;</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex m-1 align-items-center\">\r\n            <span class=\"{btnStyle} btn-dark\">{item.stackSize}</span>\r\n            <span class=\"ml-1\">Uses</span>\r\n            <div class=\"btn-group ml-auto\">\r\n                <button on:click={() => stackSize(1)} class=\"{btnStyle}\">&uarr;</button>\r\n                <button on:click={() => stackSize(-1)} class=\"{btnStyle}\">&darr;</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex m-1 align-items-center\">\r\n            <div class=\"btn-group\">\r\n                <button on:click={() => actions.move(item, -1)} class=\"{btnStyle} btn-light\">&uarr;</button>\r\n                <button on:click={() => actions.move(item, 1)} class=\"{btnStyle} btn-light\">&darr;</button>\r\n            </div>\r\n            <button on:click={() => actions.delete(item)} class=\"{btnStyle} btn-light ml-auto\">Delete</button>\r\n        </div>\r\n    </div>\r\n    {:else}\r\n    <span class:m-2={selected} class=\"d-flex btn-group mb-1\" style=\"min-height: {size * 2.5}em;\">\r\n        <span \r\n            on:dragstart={() => actions.dragStart(item)} \r\n            on:dragend={() => actions.dragEnd()} \r\n            on:click={select}\r\n            tabindex=\"0\"\r\n            class=\"btn btn-light border border-dark flex-grow-0 align-items-center d-flex\" \r\n            draggable=\"true\" \r\n            title=\"Move\">\r\n            <span style=\"align-self: center;\">⦀</span>\r\n        </span>\r\n        <span class=\"btn btn-light text-left border border-dark flex-grow-1\">\r\n            <span>{item.text}</span>\r\n            {#if item.stackSize}\r\n            <Bubbles count={item.stackSize} bind:value={item.stack}>Used</Bubbles>\r\n            {/if}\r\n        </span>\r\n        <button on:click={() => editing = true} class=\"btn btn-light border border-dark flex-grow-0\">{item.size}</button>\r\n    </span>\r\n    {/if}\r\n</div>","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    export let tabValue;\r\n    export let tab = '';\r\n\r\n    function setTab() {\r\n        tab = tabValue;\r\n        dispatch('setTab', { tab: tabValue });\r\n    }\r\n</script>\r\n\r\n<a href='#' on:click={setTab} class:active={tab == tabValue} class=\"nav-item nav-link\"><slot></slot></a>","/** @import { Component } from '#server' */\nimport { current_component } from './internal/server/context.js';\nimport { noop } from './internal/shared/utils.js';\nimport * as e from './internal/server/errors.js';\n\n/** @param {() => void} fn */\nexport function onDestroy(fn) {\n\tvar context = /** @type {Component} */ (current_component);\n\t(context.d ??= []).push(fn);\n}\n\nexport {\n\tnoop as beforeUpdate,\n\tnoop as afterUpdate,\n\tnoop as onMount,\n\tnoop as flushSync,\n\trun as untrack\n} from './internal/shared/utils.js';\n\nexport function createEventDispatcher() {\n\treturn noop;\n}\n\nexport function mount() {\n\te.lifecycle_function_unavailable('mount');\n}\n\nexport function hydrate() {\n\te.lifecycle_function_unavailable('hydrate');\n}\n\nexport function unmount() {\n\te.lifecycle_function_unavailable('unmount');\n}\n\nexport async function tick() {}\n\nexport { getAllContexts, getContext, hasContext, setContext } from './internal/server/context.js';\n\nexport { createRawSnippet } from './internal/server/blocks/snippet.js';\n","import abilities from \"./abilities.js\"\r\nimport advancement from \"./advancement.js\"\r\nimport bio from \"./bio.js\"\r\nimport character from './character.js'\r\nimport circles from \"./circles\"\r\nimport conditions from \"./conditions.js\"\r\nimport container from \"./container.js\"\r\nimport skill from \"./skill.js\"\r\nimport spells from \"./spells.js\"\r\n\r\nconst mods = {\r\n    colonialMarines: () => {\r\n        return {\r\n            navbar: { tab: 'bio' },\r\n            abilities: abilities(),\r\n            advancement: advancement(),\r\n            bio: bio(),\r\n            circles: circles(),\r\n            conditions: conditions(),\r\n            inventory: [\r\n                container({ name: 'Armament', size: 5, format: 'pockets' }),\r\n                container({ name: 'Protection', size: 2, format: 'static' }),\r\n                container({ name: 'Pack', size: 1, format: 'pockets' }),\r\n                container({ name: 'Combat Webbing', size: 1, format: 'pockets' })\r\n            ],\r\n            mod: 'colonialMarines',\r\n            notes: [],\r\n            skills: {\r\n                compact: false,\r\n                skills: [\r\n                    skill({ name: 'Admin', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Armorer', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Broker', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Criminal', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Executive', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Gunner', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Instructor', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Leader', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Manipulator', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Medic', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Operator', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Persuader', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Pilot', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Programmer', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Scavenger', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Scientist', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Scout', bluck: 'Will', special: true }),\r\n                    skill({ name: 'Soldier', bluck: 'Health', special: false }),\r\n                    skill({ name: 'Survivalist', bluck: 'Health', special: true }),\r\n                    skill({ name: 'Technician', bluck: 'Health', special: true })\r\n                ]\r\n            },\r\n            spells: spells(),\r\n            traits: [],\r\n            wises: []\r\n        }\r\n    },\r\n    torchbearer: character\r\n}\r\n\r\nexport default mods","import mods from '../models/mods.js'\r\n\r\nconst patch = (a, b) => {\r\n    for(let key in b) {\r\n        if(!a[key]) a[key] = b[key];\r\n        if(typeof(a[key]) == 'object') {\r\n            patch(a[key], b[key]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    delete: (model) => {\r\n        if(!confirm(`Delete ${model.bio.name}?`)) return;\r\n\r\n        localStorage.removeItem(model.bio.name);\r\n        return { success: `${model.bio.name} deleted from character storage` };\r\n    },\r\n    deleteAll: () => {\r\n        if(!confirm('Delete all saved characters?')) return;\r\n\r\n        localStorage.clear();\r\n        return { success: 'All characters deleted from character storage' };\r\n    },\r\n    export: (model) => {\r\n        let href = URL.createObjectURL(new Blob([JSON.stringify(model)]));\r\n        let a = document.createElement('a');\r\n        a.href = href;\r\n        a.download = `${model.bio.name}.tb2e`;\r\n        a.click();\r\n    },\r\n    import: (done) => {\r\n        let file = document.createElement('input');\r\n        file.type = 'file';\r\n        file.accept = '.tb2e';\r\n        file.onchange = (e) => {\r\n            e.target.files[0].text().then((t) => {\r\n                let key = JSON.parse(t).bio.name;\r\n                localStorage.setItem(key, t);\r\n                done(`${key} added to character storage`);\r\n            });\r\n        };\r\n        file.click();\r\n    },\r\n    load: (model, key) => {\r\n        let name = key;\r\n        if(name == `${model.bio.name}.tb2e`) return { model };\r\n\r\n        let alert = '';\r\n        if(model.bio.name && confirm(`Save ${model.bio.name} before changing characters?`)) {\r\n            localStorage.setItem(model.bio.name, JSON.stringify(model));\r\n            alert += `${model.bio.name} saved, `;\r\n        }\r\n\r\n        model = JSON.parse(localStorage.getItem(name));\r\n        if(!model.mod) model.mod = 'torchbearer';\r\n        \r\n        patch(model, mods[model.mod]());\r\n        return { model, alert: { success: `${alert}${model.bio.name} opened` }};\r\n    },\r\n    loadList: () => {\r\n        let characters = [...new Array(window.localStorage.length)].map((x,i) => window.localStorage.key(i));\r\n        characters = characters.filter(c => c.endsWith('.tb2e'));\r\n        characters.sort((a,b) => a.localeCompare(b));\r\n        return characters;\r\n    },\r\n    loadMod: (model, mod) => {\r\n        let alert = '';\r\n        if(model.bio.name && confirm(`Save ${model.bio.name} before changing characters?`)) {\r\n            localStorage.setItem(model.bio.name, JSON.stringify(model));\r\n            alert += `${model.bio.name} saved, `;\r\n        }\r\n\r\n        model = mods[mod]();\r\n        return { model, alert: { success: `${alert}${mod} loaded` }};\r\n    },\r\n    save: (model) => {\r\n        if(!model.bio.name)\r\n            return { error: 'Cannot save an unnamed character' };\r\n\r\n        localStorage.setItem(`${model.bio.name}.tb2e`, JSON.stringify(model));\r\n        return { success: `${model.bio.name} saved` };\r\n    }\r\n};","const params = new URLSearchParams(window.location.search);\r\nconst theme = params.get('theme') ?? \r\n    (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\r\n\r\nfunction setTheme(name) {\r\n    window.location.search = `theme=${name}`;\r\n}\r\n\r\nexport {theme, setTheme};\r\n","<script>\r\n    import { afterUpdate, onDestroy } from 'svelte'\r\n\r\n\timport character from \"../models/character.js\"\r\n    import NavLink from \"./NavLink.svelte\"\r\n    import actions from '../actions/characterActions.js'\r\n\r\n\timport { theme, setTheme } from '../lib/styles.js'\r\n\r\n    export let model = character();\r\n    export let tab = 'bio';\r\n\r\n    const autosaveInterval = 10000; // 10s\r\n\r\n    let navDisplay = 'none';\r\n    let menu = '';\r\n    let characters = [];\r\n    let alert;\r\n    let dismiss;\r\n\r\n    function changeCharacter(character) {\r\n        let result = actions.load(model, character)\r\n        model = result.model;\r\n        alert = result.alert;\r\n        toggleNav();\r\n    }\r\n\r\n    function changeMod(mod) {\r\n        let result = actions.loadMod(model, mod);\r\n        model = result.model;\r\n        alert = result.alert;\r\n        toggleNav();\r\n    }\r\n\r\n    function clearMenu(e) {\r\n        if (e.relatedTarget?.className.includes('dropdown-item')) return;\r\n        menu = '';\r\n    }\r\n\r\n    function deleteClick() {\r\n        alert = actions.delete(model);\r\n        loadCharacterList();\r\n        toggleNav();\r\n    }\r\n\r\n    function deleteAllClick() {\r\n        alert = actions.deleteAll()\r\n        loadCharacterList();\r\n        toggleNav();\r\n    }\r\n\r\n    function exportClick() {\r\n        actions.export(model);\r\n        toggleNav();\r\n    }\r\n\r\n    function loadCharacterList() {\r\n        characters = actions.loadList();\r\n    }\r\n\r\n    function saveClick() {\r\n        alert = actions.save(model)\r\n        characters = actions.loadList();\r\n        toggleNav();\r\n    }\r\n\r\n    function setMenu(item) {\r\n        menu = item;\r\n    }\r\n\r\n    function toggleNav() {\r\n        navDisplay = navDisplay == 'none' ? 'block' : 'none';\r\n    }\r\n\r\n    function importClick() {\r\n        actions.import((msg) => {\r\n            alert = { success: msg };\r\n            characters = actions.loadList();\r\n        });\r\n\r\n        toggleNav();\r\n    }\r\n\r\n    loadCharacterList();\r\n\r\n    let autoSave = window.setInterval(() => {\r\n        console.log(`Autosave (${model.bio.name})`);\r\n        let saved = characters.find(x => x == model.bio.name) != null;\r\n        if (saved) actions.save(model);\r\n    }, autosaveInterval);\r\n\r\n    afterUpdate(() => {\r\n        if (dismiss) dismiss.focus();\r\n    });\r\n\r\n    onDestroy(() => {\r\n        clearInterval(autoSave);\r\n    });\r\n</script>\r\n\r\n<nav class=\"navbar navbar-expand-md navbar-light bg-light\">\r\n    <button class=\"navbar-toggler\" type=\"button\" on:click={toggleNav}>\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" style:display={navDisplay}>\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"abilities\">Abilities</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"advancement\">Advancement</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"bio\">Bio</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"circles\">Circles</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"inventory\">Inventory</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"notes\">Notes</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"skills\">Skills</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"spells\">Spells</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"traits\">Traits</NavLink>\r\n            <NavLink on:setTab={toggleNav} bind:tab={tab} tabValue=\"wises\">Wises</NavLink>\r\n            <li class=\"nav-item dropdown\">\r\n                <a href='#' class=\"nav-link dropdown-toggle\" class:disabled={!characters.length} on:blur={clearMenu} on:click={() => setMenu('characters')}>Characters</a>\r\n                <div class=\"dropdown-menu\" style=\"{`display: ${menu == 'characters' ? 'block' : 'none'}`}\">\r\n                    {#each characters as character}\r\n                        <button on:blur={clearMenu} on:click={() => changeCharacter(character)} class=\"dropdown-item\">{character}</button>\r\n                    {/each}\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n                <a href='#' class=\"nav-link dropdown-toggle\" on:blur={clearMenu} on:click={() => setMenu('mods')}>Mods</a>\r\n                <div class=\"dropdown-menu\" style=\"{`display: ${menu == 'mods' ? 'block' : 'none'}`}\">\r\n                    <button on:blur={clearMenu} on:click={() => changeMod('colonialMarines')} class=\"dropdown-item\">Colonial Marines</button>\r\n                    <button on:blur={clearMenu} on:click={() => changeMod('torchbearer')} class=\"dropdown-item\">Torchbearer</button>                                \r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <div class=\"navbar-nav\">\r\n            <div class=\"nav-item dropdown\">\r\n                <button href='#' class=\"dropdown-toggle btn btn-light border border-dark\" on:blur={clearMenu} on:click={() => setMenu('options')}>Options</button>\r\n                <div class=\"dropdown-menu\" style=\"{`display: ${menu == 'options' ? 'block' : 'none'}`}\">\r\n                    <button class=\"dropdown-item\" on:click={saveClick} on:blur={clearMenu}>Save</button>\r\n                    <button class=\"dropdown-item\" on:click={exportClick} on:blur={clearMenu}>Export</button>\r\n                    <button class=\"dropdown-item\" on:click={importClick} on:blur={clearMenu}>Import</button>\r\n                    <button class=\"dropdown-item\" on:click={deleteClick} on:blur={clearMenu}>Delete</button>\r\n                    <button class=\"dropdown-item\" on:click={deleteAllClick} on:blur={clearMenu}>Delete all</button>\r\n                    <button class=\"dropdown-item\" on:click={() => setTheme(theme == 'dark' ? 'light' : 'dark')}>{theme == 'dark' ? 'Light' : 'Dark'} mode</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nav>\r\n{#if alert?.success}\r\n<button bind:this={dismiss} on:blur={() => alert = null} on:click={() => alert = null} class=\"alert alert-static alert-success btn text-center w-100\">\r\n    <strong>{alert.success}</strong>\r\n</button>\r\n{:else if alert?.error}\r\n<button bind:this={dismiss} on:blur={() => alert = null} on:click={() => alert = null} class=\"alert alert-static alert-danger btn text-center w-100\">\r\n    <strong>{alert.error}</strong>\r\n</button>\r\n{/if}\r\n","export default {\r\n    shortDate: (dte = new Date()) => {\r\n        let dd = dte.getDate().toString();\r\n        if(dd.length == 1) dd = `0${dd}`;\r\n\r\n        let mm = (dte.getMonth() + 1).toString();\r\n        if(mm.length == 1) mm = `0${mm}`;\r\n\r\n        let yyyy = dte.getFullYear();\r\n        while(yyyy.length < 4) yyyy = `0${yyyy}`;\r\n\r\n        return `${yyyy}-${mm}-${dd}`\r\n    }\r\n}","<script>\r\n    import Note from '../components/Note.svelte'\r\n\r\n    export let notes;\r\n\r\n    const actions = {\r\n        delete: (note) => {\r\n            if (!confirm(`Delete ${note.title}?`)) return;\r\n\r\n            let i = notes.indexOf(note);\r\n            notes.splice(i, 1);\r\n            notes = notes;\r\n        }\r\n    }\r\n\r\n    let filter = '';\r\n    let menu = '';\r\n    $: filtered = notes.filter(x => \r\n        !filter || \r\n        x.title.toLowerCase().includes(filter.toLowerCase()) || \r\n        x.content.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n    function add() {\r\n        notes.splice(0, 0, { \r\n            id: crypto.randomUUID(),\r\n            title: 'New note', \r\n            date: (new Date()).toISOString(), \r\n            content: 'Enter your notes here' \r\n        });\r\n\r\n        notes = notes;\r\n    }\r\n\r\n    function clearMenu(e) {\r\n        if (e.relatedTarget?.className.includes('dropdown-item')) return;\r\n        menu = '';\r\n    }\r\n\r\n    function sort(method) {\r\n        if (method == 'alpha') notes.sort((a,b) => a.title.localeCompare(b.title));\r\n        else if (method == 'ralpha') notes.sort((a,b) => b.title.localeCompare(a.title));\r\n        else if (method == 'oldest') notes.sort((a,b) => a.date > b.date);\r\n        else if (method == 'newest') notes.sort((a,b) => a.date < b.date);\r\n\r\n        notes = notes;\r\n    }\r\n\r\n    $: {\r\n        notes.forEach(note => {\r\n            if (!note.id) note.id = crypto.randomUUID();\r\n        });\r\n    }\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"d-flex\">\r\n                        <button on:click={add} class=\"btn btn-light border mb-1 mr-1\">Add note</button>\r\n                        <div class=\"dropdown\">\r\n                            <button on:blur={clearMenu} on:click={() => menu = 'sort'} class=\"dropdown-toggle btn btn-light border mb-1\">Sort</button>\r\n                            <div class=\"dropdown-menu\" style=\"{`display: ${menu == 'sort' ? 'block' : 'none'}`}\">\r\n                                <button on:blur={clearMenu} on:click={() => sort(\"newest\")} class=\"dropdown-item\">Newest</button>\r\n                                <button on:blur={clearMenu} on:click={() => sort(\"oldest\")} class=\"dropdown-item\">Oldest</button>\r\n                                <button on:blur={clearMenu} on:click={() => sort(\"alpha\")} class=\"dropdown-item\">A &rarr; Z</button>\r\n                                <button on:blur={clearMenu} on:click={() => sort(\"ralpha\")} class=\"dropdown-item\">Z &rarr; A</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex\">\r\n                        <input class=\"form-control\" placeholder=\"filter\" bind:value={filter}>\r\n                    </div>\r\n                    <div class=\"row mt-2\">\r\n                        {#each filtered as note (note.id)}\r\n                        <Note note={note} actions={actions} highlight={filter} />\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import { afterUpdate } from 'svelte'\r\n    import dateUtil from '../lib/dateUtil.js'\r\n    import TextArea from './TextArea.svelte'\r\n\r\n    export let actions;\r\n    export let note;\r\n    export let highlight;\r\n\r\n    let editTitle = false;\r\n    let input;\r\n    $: collapse = highlight == '';\r\n    $: dateValue = new Date(note.date);\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    });\r\n</script>\r\n\r\n{#if collapse}\r\n<div class=\"col-12 d-flex\">\r\n    <h4 class=\"flex-grow-1 m-0\"><button on:click={() => collapse = false} class=\"badge btn btn-light w-100 text-left\" style=\"min-height: 2.2em;\">{note.title}</button></h4>\r\n    <button on:click={() => collapse = false} class=\"badge btn btn-light border ml-1 p-2\">{dateUtil.shortDate(dateValue)}</button>\r\n</div>\r\n{:else}\r\n<div class=\"col-12\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"d-flex\">\r\n                {#if editTitle}\r\n                <input class=\"form-control\" on:blur={() => editTitle = false} bind:this={input} bind:value={note.title}>\r\n                {:else}\r\n                <button on:click={() => editTitle = true} class=\"btn btn-light w-100 text-left font-weight-bold\" style=\"min-height: 2.2em;\">{note.title}</button>\r\n                {/if}\r\n                <button on:click={() => collapse = true} class=\"badge btn btn-light border ml-1 p-2\">hide</button>\r\n                <button on:click={() => actions.delete(note)} class=\"badge btn btn-light border ml-1 p-2\">delete</button>\r\n            </div>\r\n            <div class=\"d-flex\">\r\n                <TextArea highlight={highlight} bind:content={note.content} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}","<script>\r\n    import Skill from './Skill.svelte'\r\n    import skill from '../models/skill.js'\r\n\r\n    export let skills;\r\n    export let bluckTries;\r\n\r\n    const selectedStyle = 'bg-dark text-light';\r\n    const actions = {\r\n        delete: (skill) => {\r\n            if (!confirm(`Delete ${skill.name}?`)) return;\r\n\r\n            let i = skills.skills.indexOf(skill);\r\n            skills.skills.splice(i, 1);\r\n            skills.skills = skills.skills;\r\n        },\r\n        setSpecial: (skill) => {\r\n            skills.skills.forEach(skill => skill.specialty = false);\r\n            skill.specialty = true;\r\n            skills.skills = skills.skills;\r\n        }\r\n    }\r\n\r\n    let menu;\r\n    $: filtered = skills.skills.filter(skill => \r\n        skills.show == 'all' ||\r\n        (skills.show == 'bluck' && (skill.rating > 0 || skill.pass > 0)) ||\r\n        (skills.show == 'zero' && skill.rating > 0));\r\n\r\n    function add() {\r\n        skills.skills.push(skill({ name: 'New Skill', readonly: false }));\r\n        skills.skills = skills.skills;\r\n    }\r\n\r\n    function clearMenu(e) {\r\n        if (e.relatedTarget?.className.includes('dropdown-item')) return;\r\n        menu = '';\r\n    }\r\n\r\n    function toggleLock() {\r\n        skills.lockspecial = !skills.lockspecial;\r\n        skills.skills = skills.skills;\r\n    }\r\n\r\n    $: {\r\n        skills.skills.forEach(skill => {\r\n            if (!skill.id) skill.id = crypto.randomUUID();\r\n        });\r\n    }\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"d-flex\">\r\n                        <button on:click={add} class=\"btn btn-light border mb-1 mr-1\">Add skill</button>\r\n                        <div class=\"dropdown\">\r\n                            <button on:blur={clearMenu} on:click={() => menu = 'filter'} class=\"dropdown-toggle btn btn-light border mb-1 mr-1\">Show skills</button>\r\n                            <div class=\"dropdown-menu\" style:display={menu == 'filter' ? 'block' : 'none'}>\r\n                                <button on:blur={clearMenu} on:click={() => skills.show = 'all'} class=\"dropdown-item {skills.show == 'all' ? selectedStyle : ''}\">All</button>\r\n                                <button on:blur={clearMenu} on:click={() => skills.show = 'bluck'} class=\"dropdown-item {skills.show == 'bluck' ? selectedStyle : ''}\">Known and learning</button>\r\n                                <button on:blur={clearMenu} on:click={() => skills.show = 'zero'} class=\"dropdown-item {skills.show == 'zero' ? selectedStyle : ''}\">Known</button>\r\n                            </div>\r\n                        </div>\r\n                        <button \r\n                            on:click={() => toggleLock()} \r\n                            class=\"btn border mb-1 {skills.lockspecial ? 'btn-dark' : 'btn-light'}\">\r\n                                Lock specialty\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"row mt-2\">\r\n                        {#each filtered as skill (skill.id)}\r\n                        <Skill actions={actions} skill={skill} bluckTries={bluckTries} lockspecial={skills.lockspecial} />\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import { afterUpdate } from 'svelte'\r\n    import Bubbles from './Bubbles.svelte'\r\n\r\n    export let actions;\r\n    export let skill;\r\n    export let bluckTries;\r\n    export let lockspecial;\r\n\r\n    const nameBtnStyle = 'btn btn-light w-100 text-left font-weight-bold pl-2';\r\n\r\n    let editName = false;\r\n    let input;\r\n\r\n    $: margin = lockspecial ? \"ml-auto\" : \"ml-1\";\r\n    $: showPass = skill.rating >= 1 && skill.rating < skill.cap;\r\n    $: showFail = skill.rating >= 2 && skill.rating < skill.cap;\r\n    $: showLuck = skill.rating == 0;\r\n\r\n    function setSpecial() {\r\n        if (!lockspecial) {\r\n            actions.setSpecial(skill);\r\n        }\r\n    }\r\n\r\n    function ratingClick(e) {\r\n        skill.rating += e.shiftKey ? -1 : 1;\r\n        if (skill.rating < 0) skill.rating = skill.cap;\r\n        else if (skill.rating > skill.cap) skill.rating = 0;\r\n    }\r\n\r\n    function toggleBluck() {\r\n        skill.bluck = skill.bluck == 'Health' ? 'Will' : 'Health';\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    });\r\n</script>\r\n\r\n<div class=\"col-lg-4 col-md-6\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body pt-1\">\r\n            <div class=\"d-flex\">\r\n                {#if !lockspecial}\r\n                <button on:click={setSpecial} class=\"badge btn btn-light ml-auto\">Specialty</button>\r\n                {/if}\r\n                {#if skill.readonly}\r\n                <span class=\"badge badge-light border border-dark {margin}\">{skill.bluck}</span>\r\n                {:else}\r\n                <button on:click={() => actions.delete(skill)} class=\"badge btn btn-light {margin}\">Delete</button>\r\n                <button on:click={toggleBluck} class=\"badge btn badge-dark ml-1\">{skill.bluck}</button>\r\n                {/if}\r\n            </div>\r\n            <div class=\"d-flex\">\r\n                {#if editName}\r\n                <input on:blur={() => editName = false} bind:this={input} bind:value={skill.name} class=\"form-control mb-1 mr-1\">\r\n                {:else}\r\n                <div class=\"flex-grow-1\">\r\n                    <button on:click={() => editName = !skill.readonly} class=\"{nameBtnStyle}\" style=\"min-height: 2.2em;\">\r\n                        {#if skill.specialty}\r\n                        <u>{skill.name}</u>\r\n                        {:else}\r\n                        {skill.name}\r\n                        {/if}\r\n                    </button>\r\n                </div>\r\n                {/if}\r\n                <h4><button on:click={ratingClick} class=\"badge btn btn-dark\">{skill.rating}</button></h4>\r\n            </div>\r\n            {#if showPass}\r\n            <div class=\"d-flex\">\r\n                <Bubbles bind:value={skill.pass} count={skill.rating}>Pass</Bubbles>\r\n            </div>\r\n            {/if}\r\n            {#if showFail}\r\n            <div class=\"d-flex\">\r\n                <Bubbles bind:value={skill.fail} count={skill.rating - 1}>Fail</Bubbles>\r\n            </div>\r\n            {/if}\r\n            {#if showLuck}\r\n            <div class=\"d-flex\">\r\n                <Bubbles bind:value={skill.pass} count={bluckTries}>BL</Bubbles>\r\n            </div>\r\n            {/if}\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import Spell from './Spell.svelte'\r\n\r\n    export let spells;\r\n\r\n    const selectedStyle = 'bg-dark text-light';\r\n    const maxMemory = 9;\r\n    const maxUrdr = 9;\r\n    const spellActions = {\r\n        delete: (spell) => {\r\n            if (!confirm(`Delete ${spell.name}?`)) return;\r\n\r\n            let i = spells.spells.indexOf(spell);\r\n            spells.spells.splice(i, 1);\r\n            refresh();\r\n        },\r\n        refresh\r\n    }\r\n\r\n    let menu = '';\r\n\r\n    $: inventory = spells.spells.reduce((a,b) => a + (b.inventory ? b.circle : 0), 0);\r\n    $: space = spells.memory - spells.spells.reduce((a,b) => a + (b.memorized ? b.circle : 0), 0);\r\n    $: caster = spells.memory > 0 ? 'magician' : 'theurge';\r\n\r\n    $: filters = () => {\r\n        let list = [{ val: 'all', text: 'All' }];\r\n        if (spells.memory > 0) {\r\n            list = list.concat([\r\n                { val: 'capacity', text: 'Can memorize' },\r\n                { val: 'inventoryScroll', text: 'Inventory' },\r\n                { val: 'memory', text: 'Memorized' },\r\n                { val: 'scroll', text: 'Scrolls' },\r\n                { val: 'inventory', text: 'Spellbook' }\r\n            ]);\r\n        } else if (spells.urdr > 0) {\r\n            list = list.concat([\r\n                { val: 'inventory', text: 'Relic' },\r\n                { val: 'burden', text: 'Within burden' }\r\n            ]);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    $: filtered = spells.spells.filter(spell => {\r\n        if(!spells.show || spells.show == 'all') return true;\r\n        if(spells.show == 'burden') return spell.circle <= spells.urdr - spells.burden;\r\n        if(spells.show == 'capacity') return space >= spell.circle || spell.memorized;\r\n        if(spells.show == 'inventory') return spell.inventory;\r\n        if(spells.show == 'inventory&scroll') return spell.inventory || spell.scroll;\r\n        if(spells.show == 'memory') return spell.memorized;\r\n        if(spells.show == 'scroll') return spell.scroll;\r\n    });\r\n\r\n    function add() {\r\n        spells.spells.push({\r\n            id: crypto.randomUUID(),\r\n            name: '~new spell',\r\n            circle: 1,\r\n            memorized: false,\r\n            inventory: false,\r\n            scroll: false,\r\n            description: 'Enter a description'\r\n        });\r\n        refresh();\r\n    }\r\n\r\n    function burdenClick(e) {\r\n        spells.burden += e.shiftKey ? -1 : 1;\r\n        if (spells.burden < 0) spells.burden = 0;\r\n    }\r\n\r\n    function burdenDownClick() {\r\n        if (spells.burden > 0) spells.burden--;\r\n    }\r\n\r\n    function clearMenu(e) {\r\n        if (e.relatedTarget?.className.includes('dropdown-item')) return;\r\n        menu = '';\r\n    }\r\n\r\n    function memoryClick(e) {\r\n        spells.memory += e.shiftKey ? -1 : 1;\r\n        if (spells.memory < 0) spells.memory = maxMemory;\r\n        else if (spells.memory > maxMemory) spells.memory = 0;\r\n    }\r\n\r\n    function refresh() {\r\n        spells.spells = spells.spells;\r\n        spells.spells.sort((a,b) => {\r\n            if(a.circle == b.circle) return a.name.localeCompare(b.name);\r\n            return a.circle - b.circle;\r\n        });\r\n    }\r\n\r\n    function urdrClick(e) {\r\n        spells.urdr += e.shiftKey ? -1 : 1;\r\n        if (spells.urdr < 0) spells.urdr = maxUrdr;\r\n        else if (spells.urdr > maxUrdr) spells.urdr = 0;\r\n    }\r\n\r\n    spells.spells.forEach(spell => {\r\n        if (!spell.id) spell.id = crypto.randomUUID();\r\n    });\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        {#if spells.urdr == 0}\r\n                        <div class=\"d-flex col-md-6\">\r\n                            <h3><span class=\"align-self-center font-weight-bold mr-1\">Memory palace</span></h3>\r\n                            <span class:bg-danger={space < 0} class=\"align-self-center btn badge-light border ml-auto\">{space}</span>\r\n                            <span class=\"align-self-center mx-1\">/</span>\r\n                            <button on:click={memoryClick} class=\"align-self-center btn btn-dark\">{spells.memory}</button>\r\n                        </div>\r\n                        {/if}\r\n                        {#if spells.urdr > 0}\r\n                        <div class=\"d-flex col-md-6\">\r\n                            <h3 style=\"width: 5em;\"><span class=\"align-self-center font-weight-bold\">Burden</span></h3>\r\n                            <button on:click={burdenDownClick} class=\"align-self-center btn btn-light border border-dark ml-auto\">&darr;</button>\r\n                            <button on:click={burdenClick} class:bg-danger={spells.burden > spells.urdr} class=\"align-self-center btn btn-dark\">{spells.burden}</button>\r\n                        </div>\r\n                        {/if}\r\n                        {#if spells.memory == 0}\r\n                        <div class=\"d-flex col-md-6\">\r\n                            <h3><span class=\"align-self-center font-weight-bold\">Urdr</span></h3>\r\n                            <button on:click={urdrClick} class=\"align-self-center btn btn-dark ml-auto\">{spells.urdr}</button>\r\n                        </div>\r\n                        {/if}\r\n                        {#if spells.memory > 0}\r\n                        <div class=\"d-flex col-md-6\">\r\n                            <h3><span class=\"align-self-center font-weight-bold\">In Spellbook</span></h3>\r\n                            <span class=\"align-self-center btn badge-light border ml-auto\">{inventory}</span>\r\n                        </div>\r\n                        {/if}\r\n                    </div>\r\n                    <div class=\"d-flex mt-2\">\r\n                        <div class=\"dropdown\">\r\n                            <button on:blur={clearMenu} on:click={() => menu = 'filters'} class=\"dropdown-toggle btn btn-light border mb-1 mr-1\">Show</button>\r\n                            <div class=\"dropdown-menu\" style:display={menu == 'filters' ? 'block' : 'none'}>\r\n                                {#each filters() as f}\r\n                                <button \r\n                                    on:blur={clearMenu} \r\n                                    on:click={() => spells.show = f.val} \r\n                                    class=\"dropdown-item {spells.show == f.val ? selectedStyle : ''}\">\r\n                                    {f.text}\r\n                                </button>\r\n                                {/each}\r\n                            </div>\r\n                        </div>\r\n                        <button on:click={add} class=\"btn btn-light border mb-1 mr-1\">Add spell</button>\r\n                    </div>\r\n                    <div class=\"row mt-2\">\r\n                        {#each filtered as spell (spell.id)}\r\n                        <Spell spell={spell} caster={caster} actions={spellActions} />\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<script>\r\n    import { afterUpdate } from 'svelte'\r\n    import TextArea from './TextArea.svelte'\r\n\r\n    export let actions;\r\n    export let spell;\r\n    export let caster;\r\n\r\n    const circles = [\r\n        '1st Circle',\r\n        '2nd Circle',\r\n        '3rd Circle',\r\n        '4th Circle',\r\n        '5th Circle'\r\n    ];\r\n    \r\n    let input;\r\n    let editName = false;\r\n\r\n    $: inventoryClass = spell.inventory ? 'btn-dark' : 'btn-light border';\r\n    $: scrollClass = spell.scroll ? 'btn-dark' : 'btn-light border';\r\n    $: memoryClass = spell.memorized ? 'btn-dark' : 'btn-light border';\r\n\r\n    function circleClick(e) {\r\n        spell.circle += e.shiftKey ? -1 : 1;\r\n        if (spell.circle > 5) spell.circle = 1;\r\n        else if (spell.circle < 1) spell.circle = 5;\r\n        actions.refresh();\r\n    }\r\n\r\n    function setInventory() {\r\n        spell.inventory = !spell.inventory; \r\n        actions.refresh();\r\n    }\r\n\r\n    function setMemory() {\r\n        spell.memorized = !spell.memorized;\r\n        actions.refresh();\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    });\r\n</script>\r\n\r\n<div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"d-flex\">\r\n                {#if editName}\r\n                <input on:blur={() => editName = false} bind:this={input} class=\"flex-grow-1 form-control\" bind:value={spell.name}>\r\n                {:else}\r\n                <h4 class=\"flex-grow-1\">\r\n                    <button on:click={() => editName = true} class=\"badge btn btn-light w-100 text-left\">{spell.name}</button>\r\n                </h4>\r\n                {/if}\r\n                <button on:click={() => actions.delete(spell)} class=\"badge btn btn-light\">Delete</button>\r\n            </div>\r\n            <div class=\"d-flex mt-1 flex-wrap\">\r\n                <h5><button on:click={circleClick} class=\"badge btn btn-dark w-100 text-left\">{circles[spell.circle - 1]}</button></h5>\r\n                {#if caster == 'magician'}\r\n                <div class=\"d-flex ml-auto\">\r\n                    <button on:click={setInventory} class=\"btn {inventoryClass} mr-1\">Spellbook</button>\r\n                    <button on:click={() => spell.scroll = !spell.scroll} class=\"btn {scrollClass} mr-1\">Scroll</button>\r\n                    <button on:click={setMemory} class=\"btn {memoryClass} mr-1\">Memorized</button>\r\n                </div>\r\n                {:else if caster == 'theurge'}\r\n                <button on:click={() => spell.inventory = !spell.inventory} class=\"btn {inventoryClass} ml-auto mr-1\">Relic</button>\r\n                {/if}\r\n            </div>\r\n            <div class=\"d-flex mt-1\">\r\n            </div>\r\n            <div class=\"d-flex mt-1\">\r\n                <TextArea bind:content={spell.description} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import Trait from './Trait.svelte'\r\n\r\n    export let traits;\r\n\r\n    const traitActions = {\r\n        delete: (trait) => {\r\n            if (!confirm(`Delete ${trait.name}?`)) return;\r\n            \r\n            let i = traits.indexOf(trait);\r\n            traits.splice(i, 1);\r\n            traits = traits;\r\n        }\r\n    }\r\n\r\n    let showHelp = false;\r\n\r\n    function add() {\r\n        traits.push({\r\n            id: crypto.randomUUID(),\r\n            name: 'New trait', \r\n            level: 1, \r\n            used: 0, \r\n            usedAgainst: false,\r\n            checks: 0\r\n        });\r\n\r\n        traits = traits;\r\n    }\r\n    \r\n    $: {\r\n        traits.forEach(trait => {\r\n            if (!trait.id) trait.id = crypto.randomUUID();\r\n        });\r\n    }\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        {#if !showHelp}\r\n        <div class=\"card-body\">\r\n            <div class=\"btn-group position-topright\">\r\n                <button on:click={() => showHelp = true} class=\"btn badge btn-light border border-dark\">?</button>\r\n            </div>\r\n            {#if traits.length < 4}\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <button on:click={add} class=\"btn btn-light border mb-1\">Add trait</button>\r\n                </div>\r\n            </div>\r\n            {/if}\r\n            <div class=\"row\">\r\n                {#each traits as trait (trait.id)}\r\n                <Trait trait={trait} actions={traitActions} />\r\n                {/each}\r\n            </div>\r\n        </div>\r\n        {:else}\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Traits</h5>\r\n            <button on:click={() => showHelp = false} class=\"close position-topright\" type=\"button\">&cross;</button>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <p>Traits grant bonuses by level:</p>\r\n            <ul>\r\n                <li>Level 1 traits grant +1D to a relevent test once per session</li>\r\n                <li>Level 2 traits grant +1D to a relevent test twice per session</li>\r\n                <li>Level 3 traits grant +1s to all relevent tests</li>\r\n            </ul>\r\n            <p>Each trait can be used once per session to generate up to two checks.</p>\r\n            <ul>\r\n                <li>One check is generated when used to apply a -1D penalty to an independent or versus test</li>\r\n                <li>Two checks are generated when used to grant an opponent a +2D advantage in a versus test</li>\r\n                <li>Two checks are generated when used to break a tie in an opponent's favor in a versus test</li>\r\n            </ul>\r\n        </div>\r\n        {/if}\r\n    </div>\r\n</div>","<script>\r\n    import { afterUpdate } from 'svelte'\r\n\r\n    export let actions;\r\n    export let trait;\r\n\r\n    const maxLevel = 3;\r\n\r\n    let editName = false;\r\n    let input;\r\n\r\n    function levelClick(e) {\r\n        trait.level += e.shiftKey ? -1 : 1;\r\n        if (trait.level > maxLevel) trait.level = 1;\r\n        else if (trait.level < 1) trait.level = maxLevel;\r\n    }\r\n\r\n    function setChecks(n) {\r\n        if (trait.checks == n) trait.checks--;\r\n        else trait.checks = n;\r\n    }\r\n\r\n    function setUsed(n) {\r\n        if (trait.used == n) trait.used--;\r\n        else trait.used = n;\r\n    }\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    });\r\n</script>\r\n\r\n<div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"d-flex mb-1\">\r\n                {#if editName}\r\n                <input on:blur={() => editName = false} class=\"form-control mb-1 mr-1\" bind:value={trait.name} bind:this={input}>\r\n                {:else}\r\n                <button on:click={() => editName = true} class=\"btn btn-light w-100 text-left font-weight-bold flex-grow-1\">{trait.name}</button>\r\n                {/if}\r\n                <button tabindex=\"0\" on:click={levelClick} class=\"btn btn-dark\">{trait.level}</button>\r\n            </div>\r\n            <div class=\"d-flex\">\r\n                <div class=\"btn-group\">\r\n                    {#if trait.level < 3}\r\n                    <button on:click={() => setUsed(1)} class=\"border border-dark btn {trait.used >= 1 ? 'btn-dark' : 'btn-light'}\">+1D</button>\r\n                    {/if}\r\n                    {#if trait.level == 2}\r\n                    <button on:click={() => setUsed(2)} class=\"border border-dark btn {trait.used >= 2 ? 'btn-dark' : 'btn-light'}\">+1D</button>\r\n                    {/if}\r\n                </div>\r\n                <div class=\"btn-group ml-1\">\r\n                    <button on:click={() => setChecks(1)} class=\"border border-dark btn {trait.checks >= 1 ? 'btn-dark' : 'btn-light'}\">&check;</button>\r\n                    <button on:click={() => setChecks(2)} class=\"border border-dark btn {trait.checks >= 2 ? 'btn-dark' : 'btn-light'}\">&check;</button>\r\n                    <button on:click={() => trait.usedAgainst = !trait.usedAgainst} class=\"btn {trait.usedAgainst ? 'btn-dark' : 'btn-light'} border border-dark\">Used</button>\r\n                </div>\r\n                <button on:click={() => actions.delete(trait)} class=\"btn btn-light border border-dark ml-auto\">Delete</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import { afterUpdate } from 'svelte'\r\n\r\n    export let actions;\r\n    export let wise;\r\n\r\n    let input;\r\n    let editName = false;\r\n\r\n    afterUpdate(() => {\r\n        if (input) input.focus();\r\n    })\r\n</script>\r\n\r\n{#if wise.old}\r\n<div class=\"d-flex\">\r\n    {#if editName}\r\n    <input on:blur={() => editName = false} class=\"form-control mb-1 mr-1\" bind:value={wise.name} bind:this={input}>\r\n    {:else}\r\n    <button on:click={() => editName = true} class=\"btn btn-light border mb-1 mr-1 w-100 text-left\">{wise.name}</button>\r\n    {/if}\r\n    <button on:click={() => actions.delete(wise)} class=\"btn btn-light border ml-auto mb-1\">Delete</button>\r\n</div>\r\n{:else}\r\n<div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"d-flex mb-1\">\r\n                {#if editName}\r\n                <input on:blur={() => editName = false} class=\"form-control mb-1\" bind:value={wise.name} bind:this={input}>\r\n                {:else}\r\n                <button on:click={() => editName = true} class=\"btn btn-light w-100 text-left font-weight-bold\" style=\"min-height: 2.2em;\">{wise.name}</button>\r\n                {/if}\r\n            </div>\r\n            <div class=\"d-flex\">\r\n                <div class=\"btn-group\">\r\n                    <button on:click={() => wise.pass = !wise.pass} class=\"btn {wise.pass ? 'btn-dark' : 'btn-light'} border border-dark\">Pass</button>\r\n                    <button on:click={() => wise.fail = !wise.fail} class=\"btn {wise.fail ? 'btn-dark' : 'btn-light'} border border-dark\">Fail</button>\r\n                    <button on:click={() => wise.fate = !wise.fate} class=\"btn {wise.fate ? 'btn-dark' : 'btn-light'} border border-dark\">Fate</button>\r\n                    <button on:click={() => wise.persona = !wise.persona} class=\"btn {wise.persona ? 'btn-dark' : 'btn-light'} border border-dark\">Persona</button>\r\n                </div>\r\n                <button on:click={() => { wise.old = true; actions.refresh(); }} class=\"btn btn-light border ml-auto\">Forget</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: { }\n});\n\nexport default app;","<script>\n\timport character from \"./models/character.js\"\n\n\timport Abilities from './components/Abilities.svelte'\n\timport Advancement from './components/Advancement.svelte'\n\timport Bio from \"./components/Bio.svelte\"\n\timport Circles from './components/Circles.svelte'\n\timport Conditions from \"./components/Conditions.svelte\"\n\timport Inventory from './components/Inventory.svelte'\n\timport Navbar from \"./components/Navbar.svelte\"\n\timport Notes from './components/Notes.svelte'\n\timport Skills from './components/Skills.svelte'\n\timport Spells from './components/Spells.svelte'\n\timport Traits from './components/Traits.svelte'\n\timport Wises from './components/Wises.svelte'\n\n\timport { theme } from './lib/styles.js'\n\n\tlet model = character();\n\tlet tab = 'bio';\n</script>\n\n<svelte:head>\n\t{#if theme == 'dark'}\n\t<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/vinorodrigues/bootstrap-dark@0.6.1/dist/bootstrap-dark.min.css\">\n\t{:else}\n\t<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\" integrity=\"sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn\" crossorigin=\"anonymous\">\n\t{/if}\n</svelte:head>\n\n<main id=\"app\">\n\t<Navbar bind:model={model} bind:tab={tab} />\n\t<Conditions model={model} />\n\t{#if tab == 'abilities'}\n\t<Abilities model={model} />\n\t{:else if tab == 'advancement'}\n\t<Advancement model={model} />\n\t{:else if tab == 'bio'}\n\t<Bio model={model} />\n\t{:else if tab == 'circles'}\n\t<Circles circles={model.circles} />\n\t{:else if tab == 'inventory'}\n\t<Inventory inventory={model.inventory} />\n\t{:else if tab == 'notes'}\n\t<Notes notes={model.notes} />\n\t{:else if tab == 'skills'}\n\t<Skills skills={model.skills} bluckTries={model.abilities.nature.maximum} />\n\t{:else if tab == 'spells'}\n\t<Spells spells={model.spells} />\n\t{:else if tab == 'traits'}\n\t<Traits traits={model.traits} />\n\t{:else if tab == 'wises'}\n\t<Wises wises={model.wises} />\n\t{/if}\n</main>\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node, set_hydrating } from '../hydration.js';\nimport { create_text, get_first_child, get_next_sibling } from '../operations.js';\nimport { block } from '../../reactivity/effects.js';\nimport { HEAD_EFFECT } from '#client/constants';\nimport { HYDRATION_START } from '../../../../constants.js';\n\n/**\n * @type {Node | undefined}\n */\nlet head_anchor;\n\nexport function reset_head_anchor() {\n\thead_anchor = undefined;\n}\n\n/**\n * @param {(anchor: Node) => void} render_fn\n * @returns {void}\n */\nexport function head(render_fn) {\n\t// The head function may be called after the first hydration pass and ssr comment nodes may still be present,\n\t// therefore we need to skip that when we detect that we're not in hydration mode.\n\tlet previous_hydrate_node = null;\n\tlet was_hydrating = hydrating;\n\n\t/** @type {Comment | Text} */\n\tvar anchor;\n\n\tif (hydrating) {\n\t\tprevious_hydrate_node = hydrate_node;\n\n\t\t// There might be multiple head blocks in our app, so we need to account for each one needing independent hydration.\n\t\tif (head_anchor === undefined) {\n\t\t\thead_anchor = /** @type {TemplateNode} */ (get_first_child(document.head));\n\t\t}\n\n\t\twhile (\n\t\t\thead_anchor !== null &&\n\t\t\t(head_anchor.nodeType !== 8 || /** @type {Comment} */ (head_anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\thead_anchor = /** @type {TemplateNode} */ (get_next_sibling(head_anchor));\n\t\t}\n\n\t\t// If we can't find an opening hydration marker, skip hydration (this can happen\n\t\t// if a framework rendered body but not head content)\n\t\tif (head_anchor === null) {\n\t\t\tset_hydrating(false);\n\t\t} else {\n\t\t\thead_anchor = set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(head_anchor)));\n\t\t}\n\t}\n\n\tif (!hydrating) {\n\t\tanchor = document.head.appendChild(create_text());\n\t}\n\n\ttry {\n\t\tblock(() => render_fn(anchor), HEAD_EFFECT);\n\t} finally {\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t\thead_anchor = hydrate_node; // so that next head block starts from the correct node\n\t\t\tset_hydrate_node(/** @type {TemplateNode} */ (previous_hydrate_node));\n\t\t}\n\t}\n}\n","<script>\r\n    import character from \"../models/character.js\"\r\n    import Condition from \"./Condition.svelte\"\r\n\r\n    export let model = character();\r\n\r\n    let shown = true;\r\n    let showHelp = false;\r\n\r\n    const help = [\r\n        { title: 'Fresh' , text: '+1D to all tests (except circles and resources) until other condition.' },\r\n        { title: 'Hungry and Thirsty', text: '-1 disposition to any conflict.' },\r\n        { title: 'Angry (Ob 2 Will)', text: \"Can't use wises or beneficial traits.\" },\r\n        { title: 'Afraid (Ob 3 Will)', text: \"Can't help or use Beginner's Luck.\" },\r\n        { title: 'Exhausted (Ob 3 Health)', text: '-1 disposition to any conflict. Instinct takes a turn and carries a -1s penalty.' },\r\n        { title: 'Injured (Ob 4 Health)', text: '-1D to skills, Nature, Will, and Health (but not recovery).' },\r\n        { title: 'Sick (Ob 3 Will)', text: \"-1D to skills, Nature, Will, and Health (but not recovery). Can't practice, learn, or advance.\" },\r\n        { title: 'Dead', text: \"May not use wises, test, or help.\" }\r\n    ];\r\n</script>\r\n\r\n{#if shown}\r\n<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        {#if !showHelp}\r\n        <div class=\"card-body d-flex flex-wrap\">\r\n            <Condition bind:selected={model.conditions.fresh}>Fresh</Condition>\r\n            <Condition bind:selected={model.conditions.hungry}>Hungry and Thirsty</Condition>\r\n            <Condition bind:selected={model.conditions.angry}>Angry</Condition>\r\n            <Condition bind:selected={model.conditions.afraid}>Afraid</Condition>\r\n            <Condition bind:selected={model.conditions.exhausted}>Exhausted</Condition>\r\n            <Condition bind:selected={model.conditions.injured}>Injured</Condition>\r\n            <Condition bind:selected={model.conditions.sick}>Sick</Condition>\r\n            <Condition bind:selected={model.conditions.dead}>Dead</Condition>\r\n        </div>\r\n        <div class=\"btn-group position-topright\">\r\n            <button class=\"btn badge btn-light border border-dark\" on:click={() => showHelp = true}>?</button>\r\n            <button class=\"btn badge btn-light border border-dark\" on:click={() => shown = false}>&cross;</button>\r\n        </div>\r\n        {:else}\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Conditions</h5>\r\n            <button type=\"button\" class=\"close position-topright\" on:click={() => showHelp = false}>\r\n                <span aria-hidden=\"true\">&cross;</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            {#each help as x}\r\n                <h5>{x.title}</h5>\r\n                <p>{x.text}</p>\r\n            {/each}\r\n        </div>\r\n        {/if}\r\n    </div>\r\n</div>\r\n{:else}\r\n<div class=\"container-fluid\">\r\n    <button class=\"btn btn-light border col\" on:click={() => shown = true}>\r\n        Conditions\r\n    </button>\r\n</div>\r\n{/if}\r\n","<script>\r\n    import Ability from './Ability.svelte'\r\n    import Nature from './Nature.svelte'\r\n\r\n    export let model;\r\n\r\n    function increment(e, args) {\r\n        let val = model.abilities[args.ability] + (e.shiftKey ? -1 : 1);\r\n        if (val < 0) val = args.max;\r\n        if (val > args.max) val = 0;\r\n\r\n        model.abilities[args.ability] = val;\r\n    }\r\n</script>\r\n\r\n<div id=\"${this.id}\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <Ability ability={model.abilities.will} />\r\n            <Ability ability={model.abilities.health} />\r\n            <Nature nature={model.abilities.nature} />\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <Ability ability={model.abilities.resources} />\r\n            <Ability ability={model.abilities.circles} />\r\n            <div class=\"card\">\r\n                <div class=\"card-body d-flex\">\r\n                    <h2>Lifestyle</h2>\r\n                    <h5 class=\"ml-2\"><button on:click={() => model.abilities.lifestyle = 0} class=\"btn badge btn-light border align-self-center\">reset</button></h5>\r\n                    <h2 class=\"ml-auto\"><button on:click={(e) => increment(e, { max: 99, ability: 'lifestyle' })} class=\"btn badge btn-dark\">{model.abilities.lifestyle}</button></h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body d-flex\">\r\n                    <h2 class=\"mr-auto\">Might</h2>\r\n                    <h2><button on:click={(e) => increment(e, { max: 8, ability: 'might' })} class=\"btn badge btn-dark\">{model.abilities.might}</button></h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body d-flex\">\r\n                    <h2 class=\"mr-auto\">Precedence</h2>\r\n                    <h2><button on:click={(e) => increment(e, { max: 7, ability: 'precedence' })} class=\"btn badge btn-dark\">{model.abilities.precedence}</button></h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import TextArea from './TextArea.svelte'\r\n    import TextInput from './TextInput.svelte'\r\n\r\n    export let model;\r\n\r\n</script>\r\n\r\n<div id=\"${this.id}\" class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <TextInput bind:content={model.bio.name}>Name</TextInput>\r\n                <TextInput bind:content={model.bio.stock}>Stock</TextInput>\r\n                <TextInput bind:content={model.bio.classValue}>Class</TextInput>\r\n                <TextInput bind:content={model.bio.home}>Home</TextInput>\r\n                <TextInput bind:content={model.bio.raiment}>Raiment</TextInput>\r\n                <TextInput bind:content={model.bio.epithet}>Epithet</TextInput>\r\n                <TextInput bind:content={model.bio.parents}>Parents</TextInput>\r\n                <TextInput bind:content={model.bio.mentor}>Mentor</TextInput>\r\n                <TextInput bind:content={model.bio.age}>Age</TextInput>\r\n                <TextInput bind:content={model.bio.level}>Level</TextInput>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"d-flex flex-column mb-1 col-lg-3 col-md-4\">\r\n                    <TextArea bind:content={model.bio.belief}>Belief</TextArea>\r\n                </div>\r\n                <div class=\"d-flex flex-column mb-1 col-lg-3 col-md-4\">\r\n                    <TextArea bind:content={model.bio.creed}>Creed</TextArea>\r\n                </div>\r\n                <div class=\"d-flex flex-column mb-1 col-lg-3 col-md-4\">\r\n                    <TextArea bind:content={model.bio.goal}>Goal</TextArea>\r\n                </div>\r\n                <div class=\"d-flex flex-column mb-1 col-lg-3 col-md-4\">\r\n                    <TextArea bind:content={model.bio.instinct}>Instinct</TextArea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import Circle from './Circle.svelte'\r\n    import Followers from './Followers.svelte'\r\n\r\n    export let circles;\r\n\r\n    if (!circles.followers) circles.followers = [];\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <Followers followers={circles.followers} />\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <Circle items={circles.friends}>Friends</Circle>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <Circle items={circles.enemies}>Enemies</Circle>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import container from '../models/container.js'\r\n    import Container from './Container.svelte'\r\n\r\n    export let inventory;\r\n\r\n    let dragContainer;\r\n    let dragItem;\r\n    let selected;\r\n\r\n    const actions = {\r\n        delete: (container) => {\r\n            if (!confirm(`Delete ${container.name} permanently?`)) return;\r\n\r\n            let i = inventory.indexOf(container);\r\n            inventory.splice(i, 1);\r\n            inventory = inventory;\r\n        },\r\n        dragEnd: (container) => {\r\n            if (container) {\r\n                let i = dragContainer.items.indexOf(dragItem);\r\n                dragContainer.items.splice(i, 1);\r\n                container.items.push(dragItem);\r\n            }\r\n            dragItem = null;\r\n            dragContainer = null;\r\n            selected = null;\r\n            inventory = inventory;\r\n        },\r\n        dragStart: (container, item) => {\r\n            dragContainer = container;\r\n            dragItem = item;\r\n            inventory = inventory;\r\n        },\r\n        hide: (container) => {\r\n            container.hide = true;\r\n            inventory = inventory;\r\n        },\r\n        select: (container, item) => {\r\n            dragContainer = container;\r\n            selected = selected == item ? null : item;\r\n            inventory = inventory;\r\n        },\r\n        selectEnd: (container) => {\r\n            let i = dragContainer.items.indexOf(selected);\r\n            dragContainer.items.splice(i, 1);\r\n            container.items.push(selected);\r\n            selected = null;\r\n            dragContainer = null;\r\n            inventory = inventory;\r\n        }\r\n    }\r\n\r\n    function add() {\r\n        let c = container({ name: 'new container',  size: 1, format: 'custom' });\r\n        inventory.push(c);\r\n        inventory = inventory;\r\n    }\r\n\r\n    $: {\r\n        inventory.forEach(container => {\r\n            if (!container.id) container.id = crypto.randomUUID();\r\n        })\r\n    }\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 my-1\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header p-2\">\r\n                    <h5 class=\"m-0\">Containers</h5>\r\n                </div>\r\n                <div class=\"card-body d-flex flex-column\">\r\n                    <button on:click={add} class=\"btn btn-light border\">Add container</button>\r\n                    <div>\r\n                        {#each inventory as container}\r\n                        {#if container.hide}\r\n                        <button on:click={() => container.hide = false} class=\"btn btn-light border mt-1 mr-1\">{container.name}</button>\r\n                        {/if}\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {#each inventory as container (container.id)}\r\n        {#if !container.hide}\r\n        <Container container={container} dragItem={dragItem} actions={actions} selected={selected} />\r\n        {/if}\r\n        {/each}\r\n    </div> \r\n</div>","<script>\r\n    import Wise from './Wise.svelte'\r\n\r\n    export let wises;\r\n\r\n    const wiseActions = {\r\n        delete: (wise) => {\r\n            if (!confirm(`Delete ${wise.name}?`)) return;\r\n\r\n            let i = wises.indexOf(wise);\r\n            wises.splice(i, 1);\r\n            refresh();\r\n        },\r\n        refresh\r\n    }\r\n\r\n    let showHelp = false;\r\n\r\n    $: current = wises.filter(x => !x.old);\r\n    $: old = wises.filter(x => x.old);\r\n\r\n    function add() {\r\n        wises.push({\r\n            id: crypto.randomUUID(),\r\n            name: 'New wise', \r\n            pass: false,\r\n            fail: false,\r\n            fate: false,\r\n            persona: false\r\n        });\r\n\r\n        refresh();\r\n    }\r\n\r\n    function refresh() {\r\n        wises = wises;\r\n    }\r\n\r\n    $: {\r\n        wises.forEach(wise => {\r\n            if (!wise.id) wise.id = crypto.randomUUID();\r\n        });\r\n    }\r\n</script>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n        {#if !showHelp}\r\n        <div class=\"card-body\">\r\n            <div class=\"btn-group position-topright\">\r\n                <button on:click={() => showHelp = true} class=\"btn badge btn-light border border-dark\">?</button>\r\n            </div>\r\n            {#if current.length < 4}\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <button on:click={add} class=\"btn btn-light border mb-1\">Add wise</button>\r\n                </div>\r\n            </div>\r\n            {/if}\r\n            <div class=\"row\">\r\n                {#each current as wise (wise.id)}\r\n                <Wise wise={wise} actions={wiseActions} />\r\n                {/each}\r\n            </div>\r\n        </div>\r\n        {:else}\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Wises</h5>\r\n            <button on:click={() => showHelp = false} class=\"close position-topright\" type=\"button\">&cross;</button>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <p>Wises can be used to help others in place of a relevent skill. Doing so isolates the helping character from receiving conditions from the test.</p>\r\n            <p>Wises can be used to salvage a failed roll:</p>\r\n            <ul>\r\n                <li><strong>Deeper understanding</strong> Spend a point of fate to reroll a single failed die</li>\r\n                <li><strong>Of course!</strong> Spend a point of persona to reroll all failed dice</li>\r\n            </ul>\r\n            <p>\r\n                Once a wise has been used to help another in a failed and successful test, as well as <strong>deeper understanding</strong> \r\n                and <strong>of course!</strong>, the wise may be replaced with another, or a test for advancement may be marked for a skill related\r\n                to the wise.\r\n            </p>\r\n        </div>\r\n        {/if}\r\n    </div>\r\n    {#if old.length > 0}\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <h4>Previous Wises</h4>\r\n            <div class=\"d-flex flex-column\">\r\n                {#each old as wise (wise.id)}\r\n                <Wise wise={wise} actions={wiseActions} />\r\n                {/each}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    {/if}\r\n</div>"],"names":["window","__svelte","v","Set","add","legacy_mode_flag","tracing_mode_flag","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_IS_CONTROLLED","EACH_IS_ANIMATED","EACH_ITEM_IMMUTABLE","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","PROPS_IS_UPDATED","PROPS_IS_BINDABLE","PROPS_IS_LAZY_INITIAL","UNINITIALIZED","Symbol","FILENAME","NAMESPACE_HTML","node_env","globalThis","process","env","NODE_ENV","DEV","toLowerCase","startsWith","is_array","Array","isArray","index_of","prototype","indexOf","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","array_prototype","get_prototype_of","getPrototypeOf","noop","run","fn","run_all","arr","i","length","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","INSPECT_EFFECT","HEAD_EFFECT","EFFECT_HAS_DERIVED","EFFECT_IS_UPDATING","STATE_SYMBOL","LEGACY_PROPS","LOADING_ATTR_SYMBOL","bind_invalid_checkbox_value","error","Error","name","hydrating","tracing_expressions","get_stack","label","stack","lines","split","new_lines","line","includes","push","value","join","proxy","sources","Map","is_proxied_array","version","source","reaction","active_reaction","with_parent","previous_reaction","set_active_reaction","result","set","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","s","get","undefined","deleteProperty","target","update_version","ls","n","Number","isInteger","receiver","exists","Reflect","has","active_effect","other_s","call","ownKeys","own_keys","filter","key","setPrototypeOf","e.state_prototype_fixed","signal","d","first_child_getter","next_sibling_getter","create_text","document","createTextNode","get_first_child","node","get_next_sibling","child","is_text","first_child","fragment","first","Comment","data","sibling","count","next_sibling","equals","this","safe_equals","a","b","derived","flags","parent_derived","f","ctx","component_context","deps","effects","reactions","rv","wv","parent","created","derived_safe_equal","destroy_derived_effects","destroy_effect","execute_derived","prev_active_effect","set_active_effect","get_derived_parent_effect","prev_inspect_effects","inspect_effects","set_inspect_effects","e.derived_references_self","update_reaction","pop","update_derived","set_signal_status","skip_reaction","increment_write_version","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","create_effect","type","sync","effect","nodes_start","nodes_end","last","next","prev","teardown","transitions","component_function","dev_current_component_function","update_effect","e","schedule_effect","parent_effect","parent_last","push_effect","user_effect","defer","m","context","legacy_pre_effect","token","ran","l","r1","render_effect","r2","untrack","legacy_pre_effect_reset","check_dirtiness","template_effect","thunks","deriveds","map","block","branch","execute_effect_teardown","previously_destroying_effect","set_is_destroying_effect","destroy_effect_children","remove_dom","removed","end","remove","remove_effect_dom","remove_reactions","transition","stop","unlink_effect","pause_effect","callback","pause_children","run_out_transitions","remaining","check","out","local","is_global","resume_effect","resume_children","in","micro_tasks","run_micro_tasks","tasks","queue_micro_task","queueMicrotask","handled_errors","WeakSet","is_throwing_error","is_flushing","last_scheduled_effect","is_updating_effect","queued_root_effects","dev_effect_stack","untracking","reaction_sources","new_deps","skipped_deps","untracked_writes","write_version","read_version","captured_signals","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","should_rethrow_error","handle_error","previous_effect","component_stack","effect_name","current_context","filename","function","file","p","indent","message","current","propagate_error","schedule_possible_effect_self_invalidation","root","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","previous_reaction_sources","previous_component_context","previous_untracking","set_component_context","is_runes","remove_reaction","index","new_length","start_index","was_updating_effect","previous_component_fn","set_dev_current_component_function","destroy_block_effect_children","dep","trace_need_increase","trace_v","log_effect_stack","console","slice","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","flush_count","root_effects","flush_queued_effects","process_effects","old_values","clear","is_branch","is_derived","debug","entry","entries","read","invalidate_inner_signals","captured","previous_captured_signals","capture_signals","internal_set","STATUS_MASK","status","deep_read_state","EventTarget","deep_read","visited","Date","getTime","proto","descriptors","state","mutable_source","initial_value","immutable","should_proxy","e.state_unsafe_mutation","old_value","updated","mark_reactions","set_untracked_writes","size","inspects","runes","props","c","x","u","component","context_stack_item","component_effects","component_effect","listening_to_form_reset","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","addEventListener","__on_r","evt","Promise","resolve","then","defaultPrevented","elements","capture","create_event","event_name","dom","options","target_handler","handle_event_propagation","cancelBubble","passive","body","removeEventListener","handler_element","owner_document","ownerDocument","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","apply","currentTarget","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","html","elem","createElement","innerHTML","clone","importNode","cloneNode","text","t","comment","frag","createDocumentFragment","createComment","anchor","append","before","set_text","str","__t","nodeValue","if_block","root_index","hydrate_index","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","each","get_collection","get_key","render_fn","fallback_fn","items","appendChild","fallback","was_empty","each_array","collection","array","seen","to_animate","item","is_animated","should_update","matched","stashed","measure","update_item","unfix","delete","j","move","link","k","create_item","to_destroy","destroy_length","controlled_anchor","fix","items_map","is_controlled","parent_node","textContent","pause_effects","reconcile","reactive","collection_index","dest","next_node","slot","$$props","slot_props","slot_fn","$$slots","is_interop","whitespace","append_styles","styles","important","separator","css","to_css_name","set_class","is_html","hash","prev_classes","next_classes","__className","next_class_name","directives","classname","len","substring","to_class","removeAttribute","className","setAttribute","is_present","classList","toggle","update_styles","priority","style","removeProperty","setProperty","set_style","prev_styles","next_styles","__style","next_style_attr","normal_styles","important_styles","new_style","String","replaceAll","trim","in_str","in_apo","in_comment","reserved_names","keys","name_index","to_style","cssText","IS_CUSTOM_ELEMENT","IS_HTML","set_attribute","attribute","skip_warning","attributes","__attributes","nodeName","namespaceURI","get_attributes","setters","setters_cache","element_proto","Element","get_setters","bind_value","input","is_reset","e.bind_invalid_checkbox_value","defaultValue","is_numberlike_input","to_number","selectionStart","selectionEnd","Math","min","is_bound_this","bound_value","element_or_component","bind_this","update","get_value","get_parts","old_parts","parts","init","callbacks","changed","observe_all","fns","throw_rune_error","e.rune_outside_svelte","is_store_binding","has_destroyed_component_ctx","current_value","prop_value","bindable","lazy","is_store_sub","previous_is_store_binding","capture_store_binding","getter","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","derived_getter","legacy_parent","$$legacy","mutation","arguments","from_child","was_from_child","inner_current_value","parent_value","child_value","new_value","ability","cap","rating","pass","fail","abilities","health","will","nature","maximum","resources","circles","lifestyle","might","precedence","container","format","id","crypto","randomUUID","skill","bluck","readonly","special","character","navbar","tab","advancement","currentFate","currentPersona","spentFate","spentPersona","levelBenefits","bio","parents","mentor","age","home","level","raiment","stock","classValue","belief","creed","goal","instinct","epithet","friends","enemies","conditions","shown","fresh","hungry","angry","afraid","exhausted","injured","sick","dead","inventory","mod","notes","skills","show","lockSpecialty","spells","burden","urdr","memory","traits","wises","$.each","$.get","$.event","button","handleClick","$.prop","$.set","maxFail","maxPass","$$value","$$render","consequent","consequent_1","$.set_text","text_1","shiftKey","current_component","editing","editIndex","$.mutable_source","splice","alternate","$.bind_this","input_1","$.bind_value","consequent_2","$.set_attribute","div","model","showHelp","levels","fate","persona","change","property","val","$.index","$$anchor","artha","button_2","spend","button_3","unspend","text_3","text_4","text_5","button_5","highlight","active","control","resizeInput","$.mutate","height","scrollHeight","regexp","RegExp","matches","matchAll","firstFragment","lastFragment","textarea","match","consequent_3","alternate_2","$.template_effect","text_2","alternate_1","endEdit","sort","follower","description","tags","followers","actions","confirm","collapse","editName","button_1","button_4","createFollower","selected","dragItem","smallButton","canAdd","itemActions","dragEnd","dragStart","resize","space","select","requiredSpace","canTransfer","selectEnd","dragEnter","dragLeave","dragOver","preventDefault","drop","togglePack","occupied","forEach","reduce","disabled","alternate_3","expression","$.derived_safe_equal","btnStyle","stackSize","button_6","$.set_style","span_2","span_3","button_8","consequent_4","consequent_5","hide","localeCompare","dispatch","tabValue","mods","colonialMarines","compact","torchbearer","patch","localStorage","removeItem","success","deleteAll","export","href","URL","createObjectURL","Blob","JSON","stringify","download","click","import","done","accept","onchange","files","parse","setItem","load","alert","getItem","loadList","characters","endsWith","loadMod","save","theme","URLSearchParams","location","search","matchMedia","navDisplay","menu","dismiss","changeMod","toggleNav","clearMenu","relatedTarget","loadCharacterList","setMenu","autoSave","setInterval","log","find","clearInterval","div_1","$$index","$$array","changeCharacter","button_10","button_11","text_11","button_12","text_12","div_2","div_5","a_1","msg","setTheme","dateUtil","shortDate","dte","dd","getDate","toString","mm","getMonth","yyyy","getFullYear","note","title","method","date","filtered","editTitle","dateValue","div_7","toISOString","bluckTries","selectedStyle","setSpecial","specialty","lockspecial","toggleBluck","margin","showPass","showFail","showLuck","consequent_6","display","$.set_class","spellActions","spell","refresh","burdenClick","burdenDownClick","memoryClick","circle","urdrClick","memorized","caster","filters","list","concat","scroll","div_12","setInventory","setMemory","inventoryClass","scrollClass","memoryClass","traitActions","trait","used","usedAgainst","checks","setChecks","setUsed","wise","input_2","old","app","head","help","text_8","text_9","increment","args","max","dragContainer","$$index_1","$$array_1","wiseActions","consequent_10","consequent_9","alternate_9","consequent_8","alternate_8","consequent_7","alternate_7","alternate_6","alternate_5","alternate_4"],"mappings":"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"}